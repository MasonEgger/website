{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mason Egger","text":"<p>On my business card, I am a Sr. Technical Curriculum Developer. In my mind, I am an engineer. But in my heart, I am a teacher.</p> <p>I'm Mason Egger, a technical educator, software developer, and community organizer.  I'm currently on the Developer Education team at Temporal, an organizer and president of the PyTexas Foundation, and the Deputy Province Governor for Province 9 of the Phi Mu Alpha Sinfonia fraternity.</p>"},{"location":"#recent-content","title":"Recent Content","text":"<p>The most recent content I've published.</p> <ul> <li>You Don't Get Better Without Deliberate Practice</li> <li>2023 Is Dead! Long Live 2024!</li> <li>Oh Shit, I Haven't Blogged in a While</li> </ul>"},{"location":"#featured-content","title":"Featured Content","text":"<p>These are the pieces that do well or people tell me they have enjoyed.</p> <ul> <li>How To Build a 7 Days To Die Server on Ubuntu</li> <li>How I Write Conference Talk Proposals</li> <li>Tech Industry Interviews are Bullshit. Let's Make Them Better</li> </ul> <ul> <li> <p> Come to PyTexas</p> <p>Join me April 11 - 13, 2025 in Austin Texas for the 18<sup>th</sup> annual PyTexas Conference</p> <p> PyTexas Website</p> </li> <li> <p> Take My Temporal Courses</p> <p>I am the author of many Temporal based courses in Java and Python</p> <p> Get Started</p> </li> <li> <p> Book a Meeting</p> <p>Want to chat? Book some time on my calendar. All I ask is you give me 24 hours to prepare</p> <p> Book a Meeting</p> </li> </ul> <p>Mastodon</p>"},{"location":"about/","title":"Professional Biography / <code>tl;dr</code>","text":"<p>I'm terrible at having to write bios for talks that I want to present, so I'm putting it here just to keep everything together. If you need a bio for me,  please take this one.</p> <p>Mason is currently a Sr. Technical Curriculum Developer at Temporal Technologies who  specializes building community, developer-focused educational content, distributed  systems, and Python. Prior to his work at Temporal he launched Developer Relations at  Gretel.ai as the Lead Developer Advocate, and was a Developer Advocate at DigitalOcean  specializing in Infrastructure-as-a-Service technologies. He\u2019s an avid programmer,  speaker, educator, and writer/blogger. He is an organizer of PyTexas, President of the  PyTexas Foundation, and actively contributes to open source projects.</p>"},{"location":"about/#my-resume","title":"My Resume","text":""},{"location":"about/#longer-more-robust-biography","title":"Longer, More Robust Biography","text":"<p>I am currently a Sr. Technical Curriculum Developer at Temporal</p>"},{"location":"about/#previous-roles","title":"Previous Roles","text":""},{"location":"about/#lead-developer-advocate-gretelai","title":"Lead Developer Advocate - Gretel.ai","text":""},{"location":"about/#sr-developer-advocate-digitalocean","title":"Sr. Developer Advocate - DigitalOcean","text":""},{"location":"about/#sr-site-reliability-engineer-homeawayvrboexpedia-group","title":"Sr. Site Reliability Engineer - HomeAway/Vrbo/Expedia Group.","text":"<p>While at Vrbo I was a Senior Site Reliability Engineer for the Cloud Platform Team at HomeAway (a member of Expedia Group) in Austin, Texas. My team and I build and maintain a Platform as a Service for all HomeAway developers. We are currently running tens of thousands of containers running on hundreds of nodes in datacenters in multiple datacenters around the world. </p> <p>I have worked as both a software/systems engineer and systems administrator. I am passionate about Python, Education, Security, Privacy, all things Open Source (technologies, communities, oddly licenses...) just to name a few.</p> <p>I'm a graduate of Texas State University, receiving dual degrees in Computer Science (BS) and Music (BA).</p>"},{"location":"about/#software-engineer-ii-raytheon-websenseforcepoint","title":"Software Engineer II - Raytheon Websense/Forcepoint","text":""},{"location":"blog/","title":"Blog","text":"<p>Here are my thoughts on topics that I find relevant to me, or just want to go on a nice rant.</p> <p>You're chosing to dive into the ramblings of my mind, don't be surprised to find a mad man or a genius (maybe a little of both?). </p>"},{"location":"blog/new-website/","title":"New Website!","text":"<p>Every few years I grow tired of my website and build a new one. More often than not, it is actually me trying to simplify something that I made more complicated than it needed to be. After listening to friends and  co-workers, I'm finally making the jump to static sites.</p>","tags":["Website","Hugo"]},{"location":"blog/new-website/#my-previous-sites","title":"My Previous Sites","text":"<p>I've had probably half a dozen websites since my first one in 2012 (I think?).  My first website was HTML made in Dreamweaver for part of my undergraduate  Music Technology class. In this class we covered a short section on what was  called \"web development\", then more music related technologies such as Finale  and ProTools. I purchased my domain  masonegger.com and deployed the site. Shortly after that I decided to pursue Computer Science in college (that story is long and I'll probably write a blog post on that later). After a few years and rough iterations of my basic HTML site I decided to learn Django. I worked for the Computer Science department and we had decided to rewrite our site using Django, so I took it as an opportunity to learn on my own and make my own website. I created three separate sites <code>www</code>, <code>resume</code>, and <code>labs</code> (I was a lab instructor at the time and wanted to host my materials). This was all fine and good but the overhead required for each of these sites was a database. Now I was just using <code>sqlite</code>, but the process of building an entire database driven site around what was mostly static content, seemed unnecessary. I liked the idea of trying to use the Django admin panel as sort of a Content Mangement System (for anything other than a small website, this is a bad idea) but, as it turns out, I rarely go back and edit my site (And by the time I do I've forgotten the password so I have to login and run <code>django admin</code> to reset the bloody password). The other issue is that my version of Django has become hopelessly obsolete. Like, refactor the whole site to move to 2.0 obsolete. So I was faced with the choice of a) redo the site in Django again with the same frontend (I'm actually not really a fan of it anymore) or b) explore new options. I chose that it's time to explore new options.</p>","tags":["Website","Hugo"]},{"location":"blog/new-website/#static-sites","title":"Static Sites","text":"<p>When I first started looking into build a website, my first boss had tried to point me to static sites. He said something along the lines of \"You don't need a dynamic site, and the security of it will eventually cause you problems.\" Luckily, I haven't had security issues with my website (You have to have something of value to be an actual target ), am running it on FreeBSD which, more often than not, boggles the minds of pen testers, and finally, am  not an easy to hit wordpress site. I started looking around into static site generators and immediately could see the benefits. Once the templates are setup I can simply write Markdown for posts. I enjoy this way more than logging into a WYSIWYG editor. There is no denying the speedup implications regarding a  dynamicy python site vs. static html files. I am also learning Golang for my current job, so that naturally brought me to Hugo (which I had previously received many glowing recommendations for). After looking around at the pre-built templates I finally settled on one that I liked (what you're seeing now).</p>","tags":["Website","Hugo"]},{"location":"blog/new-website/#the-desire-for-a-blog-and-the-move-away-from-medium","title":"The Desire for a Blog and the Move Away from Medium","text":"<p>I've always dabbled with the idea of writing a blog. I had a WordPress blog site once and acually liked it (until I accidentally nuked the cloud instance from orbit and had no backups). I tried building a blog in my old Django site, but absolutely loathed the interface, even after vamping it up with TinyMCE. I started a Medium blog and even published a post through my employeer HomeAway. However, I recently learned that Medium is starting a membership program  where you will have to pay to get full access to the site. As someone who  founded UnlockedEdu(see my projects section) and doesn't believe that knowledge should be hidden behind a pay wall, this just didn't sit right with me. I had been putting off updating my website and moving forward, but I do believe the Medium situation was the straw that broke the camel's back. I will still have to publish there due to work (when I write public blogs) but I will write a post with a link to the blog. I don't think I can republish it under this site since it is technically the property of my company (No animosity in this statement at all, I love my job and my company. It's just how it is).</p>","tags":["Website","Hugo"]},{"location":"blog/new-website/#the-new-site","title":"The New Site","text":"<p>Low and behold, a new site was born. It's the site you're reading this blog on. After the intial \"what the hell is this?\" phase with Hugo I've come to enjoy it. The template that I chose was a good starting point, and I have spent more time modifying the template than actually writing the initial content of this site, but I'm happy with the result. Once I get the deployment of this site up and have automated the release process, be on the look out for another blog post detailing this process.</p>","tags":["Website","Hugo"]},{"location":"blog/new-website/#welcome-to-my-new-site-its-good-to-have-you-here","title":"Welcome to my new site, it's good to have you here.","text":"","tags":["Website","Hugo"]},{"location":"blog/year-of-the-linux-desktop/","title":"Year of the Linux Desktop","text":"<p>After decades of trying to ignore or straight up bashing Linux,  Microsoft has finally embraced the loveable penguin. So much so that it ships a Linux kernel on your Windows OS by default! What does this mean for the sake of development? Is it finally the year of the Linux desktop?</p> <p>My first job was as a lab instructor/developer for the Computer Science department at Texas State University, starting in the summer of 2012. My boss was what I would call The *nix Dude. You know who I'm talking about. Socks with sandals, utility clothing (pockets in pockets for pockets), and of course, a glorious beard that would make Albus Dumbledore proud. He pretty much personified the *nix Guy from the classic Dilbert comic. Between him and a few select others I was constantly told about how this year would finally be the year Linux became popular on the desktop and how it would signal the end of Microsoft's dominance on the PC. I then decided to try Ubuntu on my personal machine, and after about three months decided this was all wishful thinking and promptly reinstalled Windows. But every time I went to a Linux meetup or conference the phrase \"year of the Linux desktop\" was always being uttered. Personally, like many, I thought it was never going to happen. However, I think I can proudly say that 2019 is in fact, the year of the Linux desktop.... just not how anyone envisioned it.</p>","tags":["Windows","Linux","VSCode","WSL","Programming"]},{"location":"blog/year-of-the-linux-desktop/#year-of-the-linux-desktopexe","title":"Year-of-the-Linux-Desktop.exe","text":"<p>If a decade ago you had told any *nix evangelist that, in 2019, Microsoft Windows would ship a version of their operating system with a Linux kernel built in you would have probably gotten one of two responses:</p> <ol> <li>\"We won! Microsoft has crumbled to Linux!\"</li> <li>\"Linux sold out! expletive M$ will ruin Linux!\"</li> </ol> <p>With Microsoft's long track record of bashing Linux (pun intended) it seemed impossible that the two would ever be able to co-exist. But when Steve Balmer left Microsoft and Satya Nadella took over as CEO it appears that Microsoft entered a sort of Renaissance period. This is a whole topic that could be covered in a separate blog post, but in summary Microsoft started adopting technologies and patterns that it never had before. So when Microsoft announced the Windows Subsystem for Linux (or WSL for short) it took many people by surprise. Microsoft seemed to be embracing Linux and responding to the need for useful development tools on its platform. While a majority of the world uses either Windows or OS X as their primary operating system for day to day life, the vast majority of software is deployed in Linux. I personally have run a dual boot system for years so when I wanted to do regular activities such as streaming video or playing games I would boot into my Windows drive, but when I wanted to write code or tinker I would reboot into my Linux drive. But now I no longer have to do that. For my work computer I used a MacBook Pro like many developers I know. This was a great experience back in early 2015. But ever since then it seems every iteration of the MacBook Pro just gets worse and worse. For the sake of keeping this short we'll only focus on one issue, the keyboard. I don't think I need to say anymore, but if Apple doesn't come to the realization that these terrible hareware decisions are driving developers away from their hardware then I doubt I'll ever own another Mac product again. It used to be that Macs were the only decent viable option for professional developer laptops (not that Linux distros aren't great, but IT management software for them is scarce). The WSL has completely turned this assumption on its head. The WSL allows me to run a fully functioning Linux distro within Windows. Now, when I open my terminal, instead of getting <code>cmd</code> or <code>PowerShell</code> I get a bash terminal with everything I ever needed from my Linux partition. Then, on top of that, I can remote connect to the WSL with VSCode and execute everything I write in there. I open an application on Windows and it just executes my code in a Linux environment flawlessly. It has been three months and I haven't needed to reboot into Linux desktop once. Here's how you can have this experience yourself.</p> <p>So let's get this setup for you so you can experience it for yourself.</p>","tags":["Windows","Linux","VSCode","WSL","Programming"]},{"location":"blog/year-of-the-linux-desktop/#installing-the-wsl","title":"Installing the WSL","text":"<p>Installing the WSL has been made extremely simple though the Microsoft Store.</p> <ol> <li> <p>Go to the Microsoft Store app on your Windows machine and search for Linux.</p> <p></p> </li> <li> <p>As you can see, there are many options to choose from. For the sake of this article we are going to install <code>Ubuntu 1804 LTS</code>. Click on the associated icon and you should see something similar to this.</p> <p></p> </li> <li> <p>Click on the <code>Get</code> button. This will add the app to your account. Then in the  top right hand corner you will see an <code>Install</code> button. Click this to actually install it on your local Windows workstation.</p> <p>After this installation process has finished we can now search for <code>Ubuntu</code> in our applications and it appears! </p> <p></p> </li> <li> <p>Look at that! Let's open it.</p> <p></p> <p>Oh no! Error?!?</p> <p>When you first open Ubuntu you may be presented with this error message:</p> <pre><code>Installing, this may take a few minutes...\nWSLRegisterDistribution failed with error: 0x8007019e\nThe Windows Subsystem for Linux optional component is not enabled. Please enable it and try again.\nSee https://aka.ms/wslinstall for details.\nPress any key to continue\n</code></pre> </li> <li> <p>Don't fret, this simply means you haven't enabled the WSL feature yet. To do this navigate to the control panel path <code>Control Panel -&gt; Programs</code> and select the <code>Turn Windows features on or off</code>. Windows comes pre-configured with the most commonly used features enabled, but the WSL is considered a specialty feature. Simply enable it and reboot your machine. After this reboot the WSL should be enabled.</p> <p></p> </li> <li> <p>Now that you have rebooted your machine search for <code>Ubuntu</code> again and open it. It may take a few minutes for the initial setup to complete. Once it is done you will be prompted for a username and password for your Linux installation. These don't have to be your Windows credentials, it can be whatever you want. Once you have entered them configuration will finish and you will be presented with a <code>bash</code> terminal. On Windows. Welcome to 2019.     </p> </li> </ol>","tags":["Windows","Linux","VSCode","WSL","Programming"]},{"location":"blog/year-of-the-linux-desktop/#installing-and-configuring-the-new-windows-terminal","title":"Installing and Configuring the new Windows Terminal","text":"<p>Now that we have a Linux distro installed on our machine we need an awesome terminal to go with it. The Ubuntu application launches a terminal for you, so if you want to use that go right ahead. It appears that Microsoft, realizing  developers desire for good tooling, has redesigned the Windows Terminal as well as open sourced it. While currently in beta, I haven't had any issues with it and found it easy to install.</p> <ol> <li> <p>Search for Terminal in the Microsoft Store. The Windows Terminal will be the first thing that appears. It may say <code>Windows Terminal (Preview)</code> which is fine.</p> <p></p> </li> <li> <p>Now click on the icon and click <code>Get</code> and <code>Install</code></p> <p></p> </li> <li> <p>Once it's installed you can see it in your recently added section or scroll through your applications to find it. For some reason when I search for it I don't find it.</p> <p></p> </li> <li> <p>Once you open it you'll see it defaults to PowerShell. If you click on the <code>+</code> sign next to the PowerShell tab you will see the options available. You can choose between PowerShell, a traditional Windows <code>cmd</code>, an Azure Cloud Shell, or since we installed Ubuntu, an Ubuntu shell. You also have the ability to modify some settings which we'll get to later.</p> <p></p> </li> <li> <p>If I click on an Ubuntu shell voila you now have a shell into your Ubuntu environment.</p> <p></p> </li> <li> <p>If you want to change your terminal to default open your Ubuntu shell you'll need to click on the <code>+</code> sign and click on <code>Settings</code>. This will open the <code>profile.json</code> in your default text editor and allow you to modify configurations such as font, color, default, and default mount position.</p> <p></p> <pre><code>{\n    \"acrylicOpacity\" : 0.5,\n    \"closeOnExit\" : true,\n    \"colorScheme\" : \"Campbell\",\n    \"commandline\" : \"wsl.exe -d Ubuntu\",\n    \"cursorColor\" : \"#FFFFFF\",\n    \"cursorShape\" : \"bar\",\n    \"fontFace\" : \"Consolas\",\n    \"fontSize\" : 16,\n    \"guid\" : \"{2c4de342-38b7-51cf-b940-2309a097f518}\",\n    \"historySize\" : 9001,\n    \"icon\" : \"ms-appx:///ProfileIcons/{9acb9455-ca41-5af7-950f-6bca1bc9722f}.png\",\n    \"name\" : \"Ubuntu-18.04\",\n    \"padding\" : \"0, 0, 0, 0\",\n    \"snapOnInput\" : true,\n    \"startingDirectory\" : \"%USERPROFILE%\\\\Linux\",\n    \"useAcrylic\" : false\n}\n</code></pre> </li> <li> <p>To change the default terminal find the shell you want to open within the <code>profiles.json</code> and copy it's <code>guid</code>. Then, at the top of <code>profiles.json</code>  there is a <code>globals</code> section with a <code>defaultProfile</code> key. Copy the <code>guid</code> from the profile you want as the <code>defaultProfile</code> and now your shell will default to that option.</p> <pre><code>{\n    \"globals\" : \n    {\n        \"alwaysShowTabs\" : true,\n        \"defaultProfile\" : \"{2c4de342-38b7-51cf-b940-2309a097f518}\",\n    ...\n}\n</code></pre> </li> </ol>","tags":["Windows","Linux","VSCode","WSL","Programming"]},{"location":"blog/year-of-the-linux-desktop/#vscode-and-remote-execution","title":"VSCode and Remote Execution","text":"<p>On top of all this Linuxy greatness Microsoft added Remote Execution plugins for their popular IDE VSCode. These Remote Execution modules seamlessly sync your workspace with an environment to enable you to run and test your code as if it were running on Linux. Currently the Remote Execution plugins support Docker containers, SSH to servers, and WSL. So now, instead of simply editing our code in a text editor in the Windows Terminal (which is how I do a lot of my programming) I can now open VSCode and it thinks it's running in a Linux environment with minimal configuration.</p> <p>So let's set this up and complete the puzzle.</p> <ol> <li> <p>Download and install VSCode from the VSCode Website.</p> <p></p> </li> <li> <p>Install VSCode by clicking on the download and following the installation      wizard instructions.</p> <p></p> </li> <li> <p>Launch VSCode and click on the plugin icon (4 squares on the bottom of the     taskbar on the left hand side) and search for <code>Remote</code>. You will see a      plugin named <code>Remote - WSL</code>. This plugin will allow your VSCode to connect     to your WSL Linux installation. VSCode will seamlessly sync your files and     allow you to execute your code as if it were running on a Linux machine.     Click <code>Install</code> to install this plugin.</p> <p></p> </li> <li> <p>Create a test file and folder for the purposes of this installation. I'm going     to create a simple Python Hello World in Python named <code>hw.py</code>.</p> <pre><code>print(\"Hello Python from WSL\")\n</code></pre> <p>Once you have done this save this file in a new directory. I saved mine in my Documents folder, but a folder called <code>Code</code> or something similar might be good to keep your projects separate from all the other files on your computer.</p> <p>Once done, close this file.</p> </li> <li> <p>VSCode can treat folders as workspaces, so now just go to <code>File -&gt; Open Folder</code>     to open the directory containing the file. This will open the document view     on the left with your file. Double click on it to open it.</p> <p></p> </li> <li> <p>Immediately after opening the file VSCode will start to warn you that nothing     is installed!. This is 100% fine. We haven't installed anything on the base     Windows system and don't intend to.</p> <p></p> </li> <li> <p>Now for the moment of truth. In the very bottom left hand corner their is a     small green box with <code>&gt;&lt;</code> symbol on it. When you hover over it it will say     <code>Open a remote window</code>. Click on this and a menu will pop down from the top     with the current options you have for remote connection (we've currently     only enabled WSL so that should be all you see, there are other remote     connections you can configure). Select the option <code>Remote-WSL: Reopen Folder in WSL</code>.     This will relaunch your VSCode but now it thinks it's running Linux.</p> <p>Note: You still may get warnings about missing plugins installed. This is ok. We'll cover that in a later step.</p> <p></p> </li> <li> <p>Now to test our code you can open a new terminal from the navigation bar     <code>Terminal -&gt; New Terminal</code> and now you have a bash terminal opened. Navigate     to the location of your python script and run <code>python3 hw.py</code> and you should     see the output of your program displayed to the terminal. Tada!</p> <p></p> </li> <li> <p>Executing our code in the terminal is nice and all, but if we just wanted that we     could have used <code>vim</code>. We want all of the features that come with VSCode. Well you can     install any plugin directly into the WSL the way you normally do. If you search for the     Python plugin for example, you'll see the button says <code>Install in WSL: Ubuntu 18.04</code>.     By doing this you will be able to run the debugger and other niceties you've come to     expect from VSCode like the debugger, linter, auto code formatter (note you will need     to install these plugins as well to get these tools).</p> <p></p> </li> <li> <p>And now that we have installed Python we can run it from VSCode directly and get our      output.</p> <p></p> </li> </ol>","tags":["Windows","Linux","VSCode","WSL","Programming"]},{"location":"blog/year-of-the-linux-desktop/#conclusion","title":"Conclusion","text":"<p>With this relatively simple setup I now have a fully functioning Linux environment that seamlessly integrates with my IDE for a development experience unlike any other. Now when I'm waiting for a build to finish, I can play a game of Overwatch or any game since I'm not having to hope for an Apple port or that the developers also wrote it to work in Linux through Steam.</p> <p>I have been using this workflow for the past three months and haven't needed to boot into my Linux partition since. One of the major downsides currently is WSL has pretty poor support for Docker, but the WSL2 has already corrected this and is winding its way through the Windows Insider Beta process. While not having docker has been somewhat of a challenge, when I need it I standup a DigitalOcean droplet with it installed and use the <code>Remote: SSH</code> plugin instead.</p> <p>I'm so impressed with this that when asked what type of laptop I want for my new job, which I start October 1, 2019, I requested a Windows laptop instead of a Mac. I have no doubt that going forward this will be a great experience for me.</p>","tags":["Windows","Linux","VSCode","WSL","Programming"]},{"location":"blog/my-personal-job-litmus-test/","title":"My Personal How Am I Feeling About My Job Litmus Test","text":"<p>Over the past five years working in tech I've developed a sort of litmus test that I perform every morning to gauge how I currently feel about my job and how my career is progressing. And I do it all with a morning playlist.</p> <p>So, I've discovered something curious that I've told others about but never really wrote down before. Over the past five years working in the tech industry, from cyber security to vacation rentals to now cloud providers, I've developed a sort of litmus test about how I'm currently feeling about my job. Funny enough I didn't set out to build this but rather it sort of just happened. It's a test I apply every morning and when the results come back negative for too many days in a row I know it's time to change something. </p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#my-morning-shower-playlist-litmus-test","title":"My Morning Shower Playlist Litmus Test","text":"<p>So, like some I enjoy listening to music while I shower in the morning. I used to listen to the news on my Google Home but I've learned that starting your day off with the latest news is a great way to ruin your day and put you in a sour mood. So, I started messing around with the idea of a playlist that I listen to every morning. Some people may opt to just have random music play every morning but that's not really my style. My morning shower playlist is more of a hype playlist and I enjoy the repetition. One of the things that annoys my friends and family is that I can watch the same TV show or listen to the same music over and over and over and never get tired of it. I'm embarrassed to say  how many times I've watched the entire King of the Hill series and when I was in college I bought the Book of Mormon CD (my Toyota Corolla didn't have Bluetooth) and I left it in the CD player for about 4 years. On rare occasions I would change it to Wicked but then right back. I am happy to report now that I own a vehicle with Bluetooth I now alternate my music a little more. Anyway, the point here is that while some people would be annoyed with the same music every single day I actually love it. So, I started adding and removing songs to the playlist until I settled on what I believe is the perfect shower playlist. I've noticed that when I spend long amounts of time in the shower it's usually because I'm avoiding  going to work. I can even pinpoint how I currently feel about the day ahead based on which song is playing when I finish and turn the shower off.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#the-playlist","title":"The Playlist","text":"<p>Here is my \"'How Do I Feel About Work' Shower Litmus Test\".</p> <ol> <li>High Hopes - Panic! At The Disco</li> <li>Shooting Stars - Bag Raiders</li> <li>Come On Eileen - Dexys Midnight Runners</li> <li>Don't Stop Me Now - Queen</li> <li>9 to 5 - Dolly Parton</li> <li>The Show Must Go On - Queen</li> </ol> <p>If you are unfamiliar with the songs, this playlist is essentially a hype playlist with songs like High Hopes, Shooting Stars, Come On Eileen, and Don't Stop Me Now that devolves rather quickly at the end. Dolly Parton's 9 to 5 is pretty much a working class anthem that criticizes the capitalistic system (and that's putting it lightly) which is then followed by The Show Must Go On, a lesser known Queen song that, to me, reminds me of a sad clown putting on a happy face to do his job<sup>1</sup>. Like I  said, this playlist is a rollercoaster that drops fast at the end. </p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#how-i-administer-this-litmus-test","title":"How I Administer This Litmus Test","text":"<p>Every morning I wake up, tell my Google Home Mini to play my playlist and take a shower. I listen to the music and enjoy the warm water and depending on what song is playing when I get out helps me determine how I feel about the day ahead.</p> <p>Here's what I'm feeling when each song is playing:</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#high-hopes-panic-at-the-disco","title":"High Hopes - Panic! At the Disco","text":"<p>So, I am rarely done when this song is playing. If I am it usually means that I'm running late. It takes half the time of this song just for my water to warm up. So, on days where this song is the result it tells me I need to get up earlier.</p> <p>That being said, this is a great song to start your morning to. It is a fantastic hype song and usually wakes me up quickly. Some might say it is an intense song to start the morning off with, I think it is just intense enough.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#shooting-stars-bag-raiders","title":"Shooting Stars - Bag Raiders","text":"<p>It is also rare for me to be done when this song is playing. However, it does happen. When this song is the result of the test it tends to mean I'm either running slightly less late than if I had finished listening to High Hopes, that I've figured out the answer to an issue I've been having and want to rush out to fix it, or I'm  just generally excited for work. Often, it's that I'm still running late, but slightly less late.</p> <p>This song is more of a meditative song than a hype song in my mind. It is a great song to just stand with your head under warm water and think. Therefore, this song is not often the result of the litmus test. It is not meant to be.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#come-on-eileen-dexys-midnight-runners","title":"Come On Eileen - Dexys Midnight Runners","text":"<p>When I finish my shower on this song that usually means I got a good night sleep, am ready to go, and am excited about the day. This result should be interpreted as \"You are currently happy and excited about your job.\" I would say that maybe 35% of the time I finish here. And I suspect the reason this number is low is due to lack of sleep not excitement.</p> <p>This song is just fun to sing along with. The Too-ra-loo-ra Too-ra-loo-rye-ay  is just too much fun to not sing along with and play with harmonically. So have fun.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#dont-stop-me-now-queen","title":"Don't Stop Me Now - Queen","text":"<p>Ah. This song. The hype songs of all hype songs. If I finish with this song I may have been a little groggy waking up. I'm notorious for not getting a  decent night\u2019s sleep but this song definitely wakes me up. This result basically means everything's right in my work life. I'm happy, I'm fulfilled, I'm ready to tackle the day. This song is the result a vast majority of days. </p> <p>Who doesn't love this song? Like seriously. It just gets you pumped.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#9-to-5-dolly-parton","title":"9 to 5 - Dolly Parton","text":"<p>So, as I said earlier, this roller coaster takes a downward angle fast. 9 to 5 is not the song of happy workers. I would imagine there is a correlation between the amount of people listening to this song and unions starting to form. That being said, if this song is the result of my litmus test it is not necessarily  game over. This just means I'm tired with the bull shit I've been dealing with lately and will more probably be in a bad mood that day.</p> <p>Dolly Parton is a national treasure. Enough said.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#the-show-must-go-on-queen","title":"The Show Must Go On - Queen","text":"<p>This is the bottom of the roller coaster. If we are here, it is not good.  <pre><code>Inside my heart is breaking\nMy makeup may be flaking\nBut my smile, still, stays on\n</code></pre> When this song is the result of the test, I know that I need to take immediate action to make something better at work. Whether that be take a few days off, talk with my manager, or polish up the resume, this is not where I want to be.</p> <p>This song is hauntingly beautiful, and I highly recommend that if you haven't heard it before that you give it a listen. </p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#how-do-i-use-this-data","title":"How Do I Use This Data?","text":"<p>So, I bet you're wondering \"If he gets to the end of his playlist does he just quit?\". The answer here is no. No one day is enough to make me quit. It is a  great indicator about how I'm currently feeling, but that day could turn everything around. I use this data two different ways. The first is to get a  gauge of my mood for the day. The second is to gauge my long-term mood. If I wind up listening to the ghostly voice of Freddie Mercury singing The show must go on for a month straight that's when I start to think that serious action needs to be taken. And I've been there. I switched teams at a past job because I found myself in this dark place for a long time (this past job was actually how I developed this playlist). And even then, when nothing changed after switching teams I decided it was time to move on. </p> <p>And to be honest, that was the best decision I've ever made.</p>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/my-personal-job-litmus-test/#conclusion","title":"Conclusion","text":"<p>Your mental health matters. Being unhappy in a job can drag you down into some very dark places. I stayed at a job for a year and a half hating my life wondering why none of my side projects were getting anywhere, why I didn't want to achieve the goals I had set for myself, and why my personal life was suffering. I know times are tough and getting a new job, especially in the current state of the world, can be scary or downright impossible. But life's too short to wake up every morning hating it. I didn't realize just how much a toxic work culture could drag you down until I left one. It's like having a weight lifted off your chest. I urge you all to find some way of being able to measure your happiness and satisfaction with your life. Because it's possible you'll wind up like me, confused and depressed, trying to figure out what's wrong when the answer was right in front of my face.</p> <ol> <li> <p>That being said, it's a beautiful song and if you haven't heard it, I highly recommend it. It chronicles Freddie Mercury's struggle to continue performing while losing his battle with AIDS.\u00a0\u21a9</p> </li> </ol>","tags":["Self Care","Work/Life Balance"]},{"location":"blog/exploring-new-waters-a-year-one-digitalocean-recap/","title":"Exploring New Waters: A Recap of My First Year at DigitalOcean","text":"<p>Another year come and gone, and what an adventure it was but I'm happy to say I have successfully completed my first year at DigitalOcean. Come, gather round and listen to the tale of a career change, being a Developer Advocate amidst a global pandemic, and everything else 2020 had to throw at me.</p> <p>So this blog post is a few months late. I wanted to post it on the anniversary of my first day at DigitalOcean, however between Hacktoberfest, deploy by DigitalOcean, and the launch of App Platform October and November were very busy for me. However, now that things have calmed down I can finally sit down and reflect on my first year at DigitalOcean as a Developer Advocate. </p>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/exploring-new-waters-a-year-one-digitalocean-recap/#how-i-arrived-at-digitalocean","title":"How I Arrived at DigitalOcean","text":"<p>On October 1, 2019 I joined DigitalOcean as a Developer Advocate. This was my first step into an advocacy role after spending roughly four years professionally as a Software Engineer/Site Reliability Engineer<sup>1</sup>. This was going to be my  third role in under five years and I was feeling slightly down that I hadn't managed to stay at one place for longer than two and half years. I left my first role for reasons that honestly, looking back, I could have probably gotten over. But I was young and dumb(er) and the sudden shift in company focus, team changes, and the inability to decide on what we wanted to be triggered my fight or flight reflex and I left. My second job, the job I left to join DigitalOcean, was.... interesting to say the least. I learned so much about the Cloud, Availability, Scaling, and the list goes on. The Cloud platform I got to work on and maintain is still, to this day, one of the most impressive I've ever seen. However, the culture among my org was slightly less toxic than a nuclear waste dump. Without going into too much detail it sucked, I hated it, and became ever more depressed the longer I stayed there. So, I started looking for a new gig. While being miserable at my previous job I learned a neat little trick. If I got accepted to speak at a conference my boss would give me the time off to attend the  conference. He wouldn't pay for the conference, but honestly at that point anything I could do to get away was worth it. So, I started submitting talks and getting accepted to many different conferences across the continent. It was during this time that I became more aware of the Developer Advocate role and what it was. I applied for a handful of Developer Advocate roles, as well as some SE/SRE roles. While the idea of being an advocate was enticing, I wasn't quite sure if I wanted to take that step. And of course, fate would position me where I had to make that exact decision. I received offers for both a Developer Advocate role and a Site Reliability Engineer role at two different companies,  both of whom I was super excited to work at. I flip flopped at lot on which role I wanted to take but, in the end, I took the role at DigitalOcean as a  Developer Advocate. It was a hard decision, but I had become so disenfranchised with engineering in general I thought it would be a good choice to try something new. And, thankfully, I was correct.</p>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/exploring-new-waters-a-year-one-digitalocean-recap/#how-this-year-went-october-1-2019-december-18-2020","title":"How This Year Went: October 1, 2019 - December 18, 2020","text":"<p>DigitalOcean prides itself on being a remote friendly company. When I started almost 70% of the company was fully remote and my role was going to be remote. That being said, most new sharks start their first week in the New York City office. I had never been to NYC so it was excited. Due to current events coming up in  the DigitalOcean company calendar my manager was able to allow me to start working the Monday after I stopped working at my previous job. This was due to the fact that DigitalOcean was going to be having its global company all hands  at Disney World in the middle of October and for me to go I needed to start within a window. I agreed and was able to convince my boss to let me  have the week off after my first week to kind of recuperate from my previous job. I fly out to NYC and get put up in one of the company's corporate apartments. Due to a majority of the company being remote these apartments were kept so  employees cannot have to worry with the hassle of a hotel when they come into  town. I get to the apartment and the first person I meet is Adam Harder, the new Video Marketing Manager. Later that evening my manager Eddie Zaneski arrived at the apartment since he was also spending the week in NYC. The next day we go  to the office and I go through the typical first day things. This is where things change. I am packing up my stuff when my manager Eddie comes by and says \"Are you ready to work an event?\". Turns out that night was the kickoff night for Hacktoberfest and I was going to help run the event. It was a lot of fun and I must say, that was the most interesting first day I've ever experienced.  Fast forward a few weeks and I'm off to Disney World for our company all hands. I got to meet so many people in the company, including all of my teammates, and just had the best time ever. My team was amazing. We got to take team pictures,  hang out, plan what we wanted to accomplish for the next year and just get to bond. The Developer Advocate team was finally fully staffed and ready to go. I leave  Disney beyond excited for what the future holds. We continue through the year as I settle in and meet more and more people in the company. We get started in 2020 and I was excited to get to work conferences. One of the main reasons I joined  was to get to travel and meet developers all over the world......and we see how  that all turned out. I am happy to say I did get to work one conference this  year. I attended Sunshine PHP in Miami, Florida in the first week of February  and I loved it.</p> <p></p> <p>Unfortunately, these happy times were short lived. Due to changes made within the company, the Marketing org, and people deciding to pursue options elsewhere  I was left the only remaining member of my original team. I'm not going to lie, it was kind of a blow. My previous team was amazing and to finally find a place that felt welcoming just to have it disappear was a huge downer. I contemplated if I should remain an advocate and even at the company. I decided to stay because I had just gotten started and hadn't even been able to actually do much Developer Relations work. I also wanted to see the new direction that my team was going to take. And on top of all of this, the world was grappling to deal with a global pandemic the likes of which hadn't been seen for a century. What was  Developer Relations and Community going to look like when I couldn't physically be with my Community? Luckily, I fortunate enough that my new manager was  someone I trusted within the company and had been a part of my previous  extended team. After that we picked up another Developer Advocate internally and then a contractor to help us with the logistical parts of the role and suddenly, I had a team again.And honestly, I'm so glad I stayed. While I miss my old team, my  current team is amazing. The direction, strategy, and charter of my team is amazing. We have measurable goals to work towards and I get to work with some of the best in Developer Relations. From product releases to Tech Talks (webinars) to  virtual conferences (both attending and hosting) to Hacktoberfest this year has been a new slate for Developer Relations at DigitalOcean. I feel that we  were able to navigate the pandemic situation and brought new life to virtual  events at a level that hadn't been seen before. I'm incredibly grateful for my team, my extended teams, the Marketing organization and DigitalOcean as a whole for making a challenging year much more enjoyable that it could have been. </p>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/exploring-new-waters-a-year-one-digitalocean-recap/#2020-stats","title":"2020 Stats","text":"<p>So what all did I do this year? Here are the stats for my accomplishments of 2020:</p> <ul> <li>Code:<ul> <li>Added the DOCR resource and data source for the DigitalOcean Terraform Provider.</li> <li>Wrote multiple sample example applications for DigitalOcean's App Platform:<ul> <li>Django</li> <li>Flask</li> <li>Fortran</li> <li>COBOL</li> <li>Perl</li> </ul> </li> <li>Wrote multiple functional applications for DigitalOcean's App Platform<ul> <li>RSS Reader API</li> <li>App Platform Showcase API</li> <li>One Time Secret API</li> <li>URL Sortener API</li> </ul> </li> <li>Hacktoberfest Repo Label/Topic Manager</li> <li>Terraform Sample Architectures for DigitalOcean</li> <li>Education Tool for setting up a lab type environment using Droplets DigitalOcean Classroom</li> </ul> </li> <li>Content:<ul> <li>Wrote 6 Tutorials for DigitalOcean's Community Site<ul> <li>How To Use Visual Studio Code for Remote Development via the Remote-SSH Plugin</li> <li>How To Create A Minecraft Server On Ubuntu 18.04</li> <li>How To Create A Minecraft Server On Ubuntu 20.04</li> <li>How To Build a Slackbot in Python on Ubuntu 20.04</li> <li>How To Deploy a Django App on App Platform</li> <li>How To Deploy a Flask App Using Gunicorn to App Platform</li> </ul> </li> <li>Produced the following videos for DigitalOcean<ul> <li>Using Visual Studio Code for Remote Development</li> <li>Build a Django App on DigitalOcean</li> </ul> </li> </ul> </li> <li>Community:<ul> <li>Presented at the following conferences:<ul> <li>PyCon 2020 - Building Docs like Code: Continuous Integration for Documentation</li> <li>Open Source Summit - SLIs, SLAs, SLD\u2019OHs! Learning About Service Uptime from Homer Simpson</li> <li>PyOhio - There's a Snake in the Birdhouse! Building a Python Culture at Vrbo</li> <li>EuroPython - There's a Snake in the Birdhouse! Building a Python Culture at Vrbo</li> <li>PyBay - There's a Snake in the Birdhouse! Building a Python Culture at Vrbo</li> <li>PyTexas - There's a Snake in the Birdhouse! Building a Python Culture at Vrbo</li> <li>PyTexas - How to Build and Deploy Your First Python Slackbot on DigitalOcean's App Platform</li> </ul> </li> <li>Presented at the following meetups:<ul> <li>Chicago Python - SLIs, SLAs, SLD\u2019OHs! Learning About Service Uptime from Homer Simpson</li> <li>IndyPy - Infarstructure as Code using Terraform Workshop</li> <li>Evening of Python Coding - Mkdocs Intro</li> <li>One Valley - Strategies for Building Cloud Infrastructure</li> <li>Texas State University EXE Student Club - Building a Discord Bot</li> </ul> </li> <li>Presented the following Tech Talks for DigitalOcean:<ul> <li>Building a Minimal, Production-Ready Infrastructure on DigitalOcean</li> <li>Foundations of Computer Security</li> <li>Securing Your Droplet</li> <li>Top 10 Security Practices for Protectiong Your Infrastructure</li> <li>Command-line Your Way to PaaS Productivity With DigitalOcean App Platform</li> <li>Utilizing Security Features in SSH</li> </ul> </li> <li>Multiple livestreams on my Twitch channel Coding With Mason</li> </ul> </li> </ul>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/exploring-new-waters-a-year-one-digitalocean-recap/#what-does-the-future-hold","title":"What Does The Future Hold?","text":"<p>My future holds many more enjoyable days at DigitalOcean. For the first time in my career I'm not looking to what's next or thinking about my next career jump. I am incredibly happy in my role and want to just enjoy that for a time.  Constantly thinking about the next step, the next jump, the next item on our  career checklist often causes us to miss the fun moments and doesn't allow us to just enjoy being in the moment. I finally found a company that feels like home, shares my values, and allows me to do the kind of work that I want to do.  They also support me by allowing me to further my career with courses and professional development. Next year I'm going to be participating in Stephanie Morillo's  DevRel CMS next year, I'm working on a book  proposal and experimenting with Zines. 2020 may have been challenging but for me, it was a good year to reset and introspect, preparing and motivating me to make 2021 a phenomenal year. </p> <p>Thank you to everyone who has and continues to support me and my work. I look forward to producing amazing content for y'all in 2021. Happy Holidays!</p> <ol> <li> <p>I had worked as a student at Texas State University managing labs and writing software while I was getting my degrees but our industry doesn't count this as \"real\" software engineering. I may write a blog about my opinion on this in the future but the tl;dr of that dismissive mindset is: \"That's bullshit.\"\u00a0\u21a9</p> </li> </ol>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/","title":"Django or Flask: How Do I Choose Which To Use?","text":"<p>As a Python developer, I love both Flask and Django. But how do I choose which one to use?  Over the years I've developed a very simple test that helps me decide if I'm going to use Flask or Django for my projects.</p> <p>I love both Django and Flask. Due to the recent release of DigitalOcean's App Platform I have found myself writing more and more webservices using these two frameworks. I now find myself answering the same question very often, which is how do you choose which one to use? Well luckily I have a simple checklist of questions to ask myself that helps me determine which framework to use.</p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/#the-questions","title":"The Questions","text":"<p>Currently I ask myself three questions to determine which framework I'm going to use. I will admit that currently I'm building mostly one-off applications and things for fun. If I was designing a large application for a company or open source project I would probably use these questions as a starting point, but I wouldn't use this as a finite decision maker.</p> <p>That being said, it's probable that you may not agree with my choices. This is fine. Each framework is 100% capable of solving every problem I throw at it. These are just my personal preferences after roughly 8 years of building Python microservices.</p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/#database-access","title":"Database Access","text":"<ul> <li>Do you need to access a database like MySQL or Postgres?<ul> <li>Yes - Django</li> <li>No - Flask</li> </ul> </li> </ul> <p>I am a huge fan of the Django ORM. It was one of the first tools I learned when I started doing Python web development and it makes my life simple. So if I find myself needing a relational database I immediately find myself reaching for Django. There are other Python ORMS such as SQLAlchemy that are also good. Flask + SQLAlchemy is a perfectly fine choice as well. But I tend to go with the Django ORM. </p> <p>However, if I need a different data store, such as a Key Value store like Redis, I will find myself reaching for Flask. If I don't need the Django ORM I don't use it. It doesn't add to much value for me in this situation. It's all about the right tool for the job.</p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/#user-authentication","title":"User Authentication","text":"<ul> <li>Do you want to have users be able to login to the system?<ul> <li>Yes - Django</li> <li>No - Flask</li> </ul> </li> </ul> <p>After the ORM my next favorite feature of Django is its authentication framework. This is another feature I've been using since I got started with Django and it has been fun watching it grow and gain features throughout the years. I enjoy this feature so much I have never implemented authentication in Flask. Maybe it's fantastic. I wouldn't know. I have always found Django's auth to be easy to use and extremely flexible. So, if I need user authentication, I always pick Django.</p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/#container-size","title":"Container Size","text":"<ul> <li>If deploying a microservice, does size of container matter?<ul> <li>Yes - Consider Flask</li> <li>No - Consider Django</li> </ul> </li> </ul> <p>Sometimes when you're deploying microservices the size of your container makes a big difference. We would expect Flask, being a microframework, to have a smaller footprint than Django, which is exactly the case. Below is data regarding three docker containers that I've built. One is ubuntu with pip installed, one has flask installed and the other has Django installed. </p> <p><pre><code>ubuntu              ...     394MB\nflask               ...     398MB\ndjango              ...     428MB\n</code></pre> As we can see, there is a 30MB difference between the containers. This is just the base framework, not including other libraries and middleware. While this may not seem like a lot, it can make a difference in deployment environments. I rarely have to ask myself this question, but it is definitely something that needs to be considered.</p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/#the-decision","title":"The Decision","text":"<p>Once I have run through my list I tally it up. If Django was an answer to the database or authentication questions that is usually enough for me to go with Django. However, if that isn't the case I almost always go with Flask. If I'm writing a small microservice, cron task, or even a small REST API Flask provides everything I need to write clear, concise code. It's not that Flask can't be used to build large applications. In fact, the first job I had out of college was building a huge REST API in Flask. I just enjoy writing smaller apps in Flask and larger apps in Django. </p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/django-or-flask-how-do-i-choose-which-to-use/#conclusion","title":"Conclusion","text":"<p>So there you have it. That is how I determine if I'm writing my application in Django or Flask. The process may seem simple, but I have always been happy with the implementation of my apps. If I was working in a team or the code would need to be maintained by others I would use this framework to start a discussion instead of mandating a tech stack, but for my personal projects it's good enough for me. </p> <p>If you're curious about deploying Django or Flask to DigitalOcean's App Platform checkout this Django and Flask tutorial that I wrote. If you're new to DigitalOcean and want to try it out you can click here for a $100 free credit for 2 months with a new account.</p>","tags":["Python","Django","Flask","Web Development"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/","title":"Tech Industry Interviews are Bullshit. Let's Make Them Better","text":"<p>If you ask almost any programmer what their least favorite part of the industry is, they'll likely say interviewing. The Tech industry has transformed what should be a simple process into an unholy nightmare. When a majority of your industry says it loathes the interview process, perhaps we should examine it more and attempt to make it better.</p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#lets-just-say-what-were-all-thinking","title":"Let's Just Say What We're All Thinking","text":"<p>Technical interviews suck. I don't think I've ever met someone who was like \"You know what my favorite part of our industry is? The interviews! I love being put on the spot and being harshly critiqued over my ability to think on the spot and recall random algorithms that no one ever actually uses in production.\" Yet, somehow, we continue to double down on a process that is not only extremely stressful but overwhelmingly biased.</p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#lets-put-it-in-perspective","title":"Let's Put It in Perspective","text":"<p>Imagine you were interviewing for a job as a short order line cook at a restaurant chain. For this example, we'll call it French Toast House. You arrive at the restaurant for an interview and are greeted by the company's accountant. Now you'll never actually work with the accountant; you're a cook but the company wants people outside of the cooks to evaluate you. You have a nice conversation with the accountant, and you try to ask basic questions like, \"Do we work with gas or electric stoves?\". The accountant admits that they don't know; they have nothing to do with the preparation of food, but they do want you to solve this brain teaser about transporting a fox, chicken, and corn across a river. They get up to leave and ask if you have any questions about the job. You decide to not ask any because they are unaware of the cooking procedures within the kitchen and when you tell them you don't they frown and say \"That's a shame.\" </p> <p>You are then interviewed by one of the night shift cooks. They just finished cooking 100,000,000 pieces of French toast because last night was prom night and everyone decided to come to the restaurant at 3:00am in the morning. They look utterly exhausted and completely disinterested in being there. They ask you routine questions like what a stove is and how would you handle a grease fire, but then their pager goes off. They swear loudly because apparently more French toast is needed and it's their turn to be in the bi-monthly French toast hell. You ask if it is always like this and they laugh like a deranged person who just figured out they can put Red Bull in the coffee machine and never sleep again as they walk out of the room, leaving you alone for the next 10 minutes until it's time for the next interviewer. </p> <p>Your next interviewer is the Senior Short Order Line Cook. You spend the first five minutes getting to know each other but then the interviewer says it's time for \"a simple test, won't be too hard\". You are then asked to recreate Gordon Ramsey's famous Beef Wellington, but as an added challenge you aren't allowed to use any utensils. You are confused since you thought you were going to be making French toast, but the interviewer explains that they like to see how you do under pressure. You ask if you could go to the kitchen to attempt this experiment but are told to just diagram it on the white board. You muddle through the exercise as best you can with your limited knowledge of Beef Wellingtons but when it's over you can tell the interviewer is disappointed. They come up and show you how they would have solved it and tell you that it's a standard question from the Cracking the Short Order Line Cook Interview book. You're shown out of the building and told they'll get back to you with their decision soon. You make a mental note of how to cook Beef Wellingtons, just on the off chance it shows up at your interview at Burger Queen. </p> <p>If you were offered the job would you take it? Depends on your situation. You're pretty sure you'll be able to work with real utensils and not have to cook Beef Wellingtons but didn't see any evidence of this. Was this a fair interview process? No. Yet some version of this dynamic is currently being used to interview software engineers around the world, holding them to a much higher standard and rigging the situation against people who don't know the secret knock of admittance. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#why-is-it-like-this","title":"Why Is It Like This?","text":"<p>To be honest, I have no earthly idea. I don't know where this form of interviewing came from. My assumption is that one of the larger companies decided to develop a hiring practice to ensure that they could \"attract and hire top talent\".(1) Then everyone else in the industry was like \"Hey look! Hooli does it like this, so should we!\". There's a very blatant issue with this approach. Your 30 person startup does not have the same hiring challenges as the wealthiest company on the planet. I don't know who needs to hear this, but you are not Hooli. You're not. \"Well if we continue growing our customer base...\" No. Stop. You do not move petabytes of data a day. You do not have 3 billion concurrent users. And let's be honest, these large companies don't need this kind of process either. The only reason they get away with it is because their reputation allows them to get away with it. If I were to give a conservative estimate I would say 95% of all software engineering jobs will not require the level of stringency that is tested in interviews. I think the following image explains it perfectly (big shout out to Dare Obasanjo for posting this on their twitter.   </p> <ol> <li>By the way, \"hire and attract top talent\" is just a fancy way of saying \"mask our discrimination by hiring people that look and think like us\".</li> </ol> <p>So, your small startup offering a store front for people to buy stuffed armadillos should not adopt these same interviewing methods. For one, they are extremely discouraging to participants. I personally know that I'm a competent engineer. These interviews make me feel like shit, hands down. I have to tell myself that \"Interview questions are not the real job. You can do the job, you just struggle jumping through their hoops.\" Secondly, adopting their practices means that you are validating these practices. And that's your choice; just know that some people, myself included, refuse to participate in interviews like this and you're potentially alienating your talent pool. If you really cared about \"top talent\", your interview practice would show it.</p> <p>If you want to attract the top talent, make your interview process match the level of expectation required for the job. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#why-do-the-engineers-at-these-companies-participate-in-this-process","title":"Why Do the Engineers at These Companies Participate in This Process?","text":"<p>I honestly don't know. I know that I don't. I refuse. If I had to guess about other people, I'd say it's primarily a combination of lack of training mixed with a little bit of ego, revenge, and gatekeeping. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#lets-talk-about-the-lack-of-training-first","title":"Let's Talk About the Lack of Training First.","text":"<p>I've worked in the software industry for about 9 years now, with my first three years being in academia. It wasn't until I joined DigitalOcean in October of 2019 that I ever received any form of interview training. Most engineers are thrust into the interview room with no further instructions than \"Interview this person.\" This actually surfaces a more pressing issue, and that is there is no formalized process around hiring. This is bad for both the candidate and the company. This means that there isn't any sort of standardized interviewing practices  not only across teams within the company but also within a single team that is interviewing multiple candidates  for the same role. This can lead to vastly different experiences for candidates and allow for bias to slip in. So when I think about it, it is kind of hard to be upset with engineers for reverting to the types of questions that they themselves were asked when they are given no training or guidance in interviewing. At that point, it is a failure of the company, not the individual interviewers.</p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#do-you-really-think-some-people-care-about-where-you-went-to-school-or-imparting-their-struggles-onto-others","title":"Do You Really Think Some People Care About Where You Went to School or Imparting Their Struggles Onto Others?","text":"<p>Absolutely. I've witnessed it. I've been denied opportunities because of where I went to school and my inability to perform somersaults while saying the Greek alphabet backwards. If you ever want to be completely disheartened by this all you have to do is go read the Tech industry interview section on the Blind app.(1) The below bullet points are exact quotes from people I've heard in my career from interviewers and sadly enough, recruiters. </p> <ol> <li> <p>I don't recommend you do this. It'll just make you sad and upset.</p> </li> <li> <p>\"Well, I had to do XYZ when I was interviewing, so they should too!\"</p> </li> <li>\"I went to a Top 10 Computer Science School. Where did you go?\"</li> <li>\"I don't want to hire students from XYZ University, their program isn't good.\"</li> <li>\"We don't hire engineers from your University. (Said to me by a recruiter at a job fair on my university campus)</li> </ol> <p>This saddens me to no end. But it's a reality that we need to talk about. This came up as recently as two weeks ago when someone posted the interview criteria that ex-Googlers created while they were working at Twitter. A process, btw, that is disgustingly discriminatory. (Thanks to Leslie Miley for posting this)</p> <p></p> <p>I could go on but I'm literally getting upset writing this. So long story short: Yes these people exist. Yes it's completely unfair. Call it out when you see it, speak up in your company for fair interviewing practices (I'll go into this more later in the article) and don't repeat their mistakes. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#does-everyone-do-this","title":"Does Everyone Do This?","text":"<p>Not at all. People tend to remember past bad experiences and that is exactly what happened in the paragraph above. For every asshole interviewer I've experienced I've dealt with three amazing ones. But it only takes one bad person in an interview panel to sour the entire experience. Oddly enough, I've found that it's usually the younger engineers who do this.(1) When I've interviewed with more senior engineers who haven't thought about how to balance a tree since their last interview(2) don't ask questions like this. They ask practical questions. I know one senior engineer who always asks the exact same interview questions regardless of level. He claims he can know everything about a candidate from three relatively simple programming questions, each of which should be solvable by a student who has finished a CS 101 course. I had another senior person set up a test where I had to debug an issue with a web server. None of this \"If you throw an egg down a hallway how many platypuses would it take to sing La Traviata\".(3) Questions that are actually relevant to the job that test proficiency, not familiarity with questions. </p> <ol> <li>If you're a younger engineer who doesn't do this, congrats! You're doing it right. Those who are doing this know who they are and probably will leave nasty comments or blast me on Twitter about this article.</li> <li>Or ever. Some of the best engineers I've ever worked with have 0 formal education in Computer Science.</li> <li>The answer is 17. 12 to sing the different parts and 5 extras in case any of them run after the egg. Usually the mean platypus attention span can be calculated by taking the sum of the number of platypuses divided by the average length of an egg. This can range from 53.12mm for a medium sized egg to 59.675mm for an extra large egg. For the sake of brevity I won't go into the math of converting platypuses to millimeters. </li> </ol>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#well-then-if-you-dont-like-it-whats-the-better-option","title":"\"Well Then, If You Don't Like It What's The Better Option?\"","text":"<p>I mentioned it above but I'll repeat Ask questions that are relevant to the job you're interviewing the candidate for. If you are interviewing someone for a job to work on the front page of your website, they probably don't need to know how to build a binary tree from scratch. And I'm sure if that odd case ever did actually come up they would do what every engineer(1) does, They'll Google It. It's as if everyone believes their workplace is this XKCD comic. </p> <ol> <li>Including you, snobby person currently interviewing the candidate.</li> </ol> <p></p> <p>Memorization of knowledge is an outdated measure of intelligence. We live in a world where I can ask literally any question I have ever wanted and get an answer instantly. Is having this knowledge in your mind advantageous? Absolutely. But is it an indicator of ability? Not in the slightest. In actuality it could become a hindrance. The amount of times I've learned something new about a topic I already felt very knowledgeable in because I chose to look something up to double check is non-trivial. The information in your head doesn't update unless you choose to update it. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#how-i-interview-people","title":"How I Interview People","text":"<p>I enjoy interviewing people. It's always fun to add someone new to your team and the people you meet along the way are fascinating. I split my interviews into three parts:</p> <ol> <li>Let them talk about themselves</li> <li>Technical interview</li> <li>Discuss the job</li> </ol>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#part-1-let-the-candidate-tell-you-about-themselves","title":"Part 1 - Let the Candidate Tell You About Themselves","text":"<p>Candidates tend to want to tell you about themselves and their work. So let them. Questions like \"So tell me about yourself\" can be seen as vague but some candidates really enjoy that question. If they don't, try to make a more pointed question. \"Tell me about your last job.\" \"How did you get into programming?\" \"What is your favorite programming language and why?\" These are all really good ways to get a conversation going. My favorite question to ask is \"Tell me about a project that you're proud of.\" Most developers have had at least one project that they are super happy to talk about. The project might have taught them something new, been really fun to work on, or solved a complex issue. Whatever it is, you want to know about it because it will showcase the candidates ambition. I always hire enthusiastic, ambitious, and curious people ready to learn. That mindset is contagious and it elevates a team. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#part-2-technical-interview","title":"Part 2 - Technical Interview","text":"<p>\"Wait Mason, didn't you just go on a long winded rant about how you hate technical interviews?\" To an extent. I hate technical interviews for the sake of cleverness. I do, however, acknowledge that we have to have some metric of determining ability. I have a three-pronged technical interview. The first question is for them to implement the classic \"Fizzbuzz\" program.(1) You may laugh, but you'd be surprised how many people are filtered out with this question. This is the bare minimum bar for me. If a candidate can't pass this then I believe they will benefit more from practice and study than a job that has demands. The second question I ask is for the candidate to implement the game of craps. I usually explain the game and have a printout for the candidate to reference. This assignment requires keeping state and iterating until an outcome is reached. Finally, I tend to ask a question about removing all duplicate characters from a string and getting a count of all the characters of the same type in a string. I love set theory so if you use a set for this question I smile on the inside. This is the question I'd like to see some form of data structures being used.</p> <ol> <li>Always give a detailed assumption of the program. Don't assume everyone knows what Fizzbuzz is.</li> </ol> <p>Note, none of the questions require advanced knowledge of data structures or algorithms. As someone who's worked in the DevOps space for a while, I rarely come across these concepts so I don't interview for them. I assume that the person who I hire will reach for these tools when necessary and if not that's what a code review and being a mentor is for.</p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#part-3-discuss-the-job","title":"Part 3 - Discuss the Job","text":"<p>This might be the most controversial thing I say in this entire blog post. I show every candidate who does an onsite (or virtual onsite) our Jira backlog. I show them what the team is working on. I encourage them to ask questions about the backlog. It is just as much about them interviewing me as it is me interviewing them. I had an experience where I took a job and in our first sprint planning I looked at the backlog and saw not a single thing that I wanted to work on. I spent the next year and a half hating my job. I want to ensure that doesn't happen to anyone on my team. I also take this time to discuss architecture, the technologies we use, and ask questions about these technologies. If the role is for a Senior Kubernetes Engineer then I should definitely check their knowledge. If you have a good recruiting team supporting you though, this isn't as necessary because they should have already weeded out the people with little to know experience in the technologies you need. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#after-the-interview","title":"After the Interview","text":"<p>Hopefully you're not the only person interviewing a candidate and there is a team of people relevant to the project. Trust your teammates. Tell them what you're going to be interviewing the candidate on so they can adjust accordingly. Everyone should interview every candidate with the same outline. Switching it up to how you feel that day just allows for bias. </p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#how-can-this-be-made-better","title":"How Can This Be Made Better?","text":"<p>Talk with your manager. Talk with your teammates. Discuss how you can make the process better. Then take action. Here are some tips for an interview process that you can easily implement and improve your process:</p> <ul> <li>Discuss who will ask what. Make sure everyone doesn't ask FizzBuzz. Does everyone need to know the candidates life story or could that time be better used for other questions?</li> <li>Set your questions and ask the same questions for all candidates. This will help remove bias and ensure a fair process for the whole candidate pool.</li> <li>Hold your teammates accountable for their questions. If you see a question that you think is unnecessary ask your teammate what they are trying to learn from that question. Don't come off confrontational about this. People can get defensive over this topic really quick.</li> <li>Don't do group interviews. These are extremely intimidating and you will not get the results you desire from these.</li> <li>Debrief within 24 hours of the candidate exiting the building. Impressions are best fresh. </li> </ul> <p>A defined process will lead to a better experience for both the candidates and the interviewers.</p>","tags":["Interviews"]},{"location":"blog/tech-industry-interviews-are-bullshit-lets-make-them-better/#final-thoughts","title":"Final Thoughts","text":"<p>We can do better than this. I love the tech industry. The people who I've met here are amazing and the innovation is inspiring. Take action. Make an active attempt to make your process standardized. Make the interview process match the requirements. Developers talk. When we experience a good interview process we tell our friends and the same for a bad one. I've not applied at companies before because I've heard their process is awful. The changes you're trying to achieve won't happen overnight. It'll take time. The only thing I can tell you is that if no one tries to make things better that we all better get used to cracking open your copy of Cracking the Short Order Line Cook Interview and remember exactly how to make Gordon Ramsey's Beef Wellington. </p>","tags":["Interviews"]},{"location":"blog/random-musings-about-resumes/","title":"Random Musings About Resumes","text":"<p>Drafting a resume can be a nerve wracking experience. While there are many resources available for creating a resume, I still see the same mistakes year after year on resumes. In this post I'll discuss my philosophy regarding resumes and some tips on how to make yours better.</p> <ul> <li>My Resume for reference</li> </ul>"},{"location":"blog/random-musings-about-resumes/#my-resume-story","title":"My Resume Story","text":"<p>It's no surprise that drafting a resume can be a daunting task. You're essentially trying to make a first impression with a piece of paper that needs to be formatted in a specific way using specific language that can't be too long or too short. If you've ever been stressed out by your resume know that you're not alone. I feel the same way. I've read articles, visited resume building centers on university campuses, and even bought a few books on resume and technical writing. While I learned a lot of good information from these resources, I found myself pushing back on some of the recurring patterns I found. Like most university students, I found myself making my first resume in preparation for a job fair. After getting a first draft of my resume finished, I looked it over and was unhappy with it. It was bland, dull, and not a representation of who I was as a person. I took it to Career Services on campus to discuss it with them but was assured that my resume checked all of their boxes and was a successful resume. That didn't sit right with me and I thought to myself \"I'm going to make this the way I want to so that it represents me.\" So, I decided to break away from my colleagues at the time and not go with the default resume template in Google Docs and make my own using Latex.(1) Once I figured out what I was doing the result was something I was very proud of. I took my resume to the job fair and was complimented by every single recruiter I handed my resume to. Everyone loved the format and the fact that it had color, an element I was explicitly told to avoid. Since then, every single job that I've applied to has complimented me on the layout of my resume. When I started speaking at universities to students about their resumes I've tried to let them know that it's ok to deviate from the \"standard resume\". Below I'm going to go over the advice that I give students and working professionals regarding resumes.</p> <ol> <li>While some of you may be sitting here thinking \"Wow, that sounds like a terrible idea.\" let me assure you, it is way worse than you can possibly imagine. I currently have one laptop that I managed to install all of the packages correctly on that can compile my resume. I have tried to recreate it elsewhere and have failed. That laptop is forever more my \"Resume Generating\" laptop. One day it'll die and I'll have to change formats. But until then I just hold out against hope.</li> </ol>"},{"location":"blog/random-musings-about-resumes/#masons-resume-advice","title":"Mason's Resume Advice","text":"<p>I will be the first to say that I have very strong opinions about resumes. You may or may not agree with everything that I say here. All of these tips are based of my personal experience and what I've witnessed while being on hiring panels.(1)</p> <ol> <li>If you read this article and think to yourself \"He's completely wrong, I absolutely disagree with all of this\" that's fine. My feelings won't be hurt. Don't implement these tips then.  </li> </ol>"},{"location":"blog/random-musings-about-resumes/#tip-1-the-standard-template-is-boring-change-it-up","title":"Tip #1 - The Standard Template is Boring. Change It Up","text":"<p>Everyone uses the resume templates in Word or Google Docs. Everyone. And they're boring templates, devoid of color and any emotion. I dislike them and wish they would go away forever. Try to find a template with accent colors, maybe a two column template, maybe even a Hugo template that can be saved as a 1 page resume. Don't be afraid of color!(1)</p> <ol> <li>This is the biggest tip I get the most pushback on and I don't understand it. People always tell me \"Avoid color! All you need is headers and bulleted lists!\". While I can see how using colors may be difficult for someone who is visually impaired (hint: there are color schemes that address this), more often than not people who hold this bland ass opinion are trying to jam way too much into their resume and need every spare millimeter to put another irrelevant piece of information. </li> </ol>"},{"location":"blog/random-musings-about-resumes/#tip-2-objectives-are-pointless-use-that-space-for-something-else","title":"Tip #2 - Objectives Are Pointless. Use That Space For Something Else","text":"<p>Get rid of these. Period. Objectives are my biggest pet peeve on resumes. Unless you are legitimately trying to trade me 3 chickens for one of my goats I know you're trying to get a job! You sent me your resume! You didn't send it to me so I could frame it and walk by it every day. You sent it because you want a job! Space on a resume is valuable real estate. Anything that doesn't need to be there is only taking up space from something more important. I prefer to replace this with an About Me section. Tell me who you are. What do you like to work on? What are you passionate about? My About Me says I like backend work, specifically Python, along with teaching and open source. This section is at the top of the page. The goal is for a recruiter or hiring manager to read it and be able to immediately go \"This person is/isn't a good potential candidate for this role\" before they ever even get to my experience.(1) Tell people who you are up front and save everyone some time.</p> <p>1.It's also a great conversation starter for recruiters/hiring managers. They already know something about me that's true because I told them. They didn't have to extrapolate it.</p>"},{"location":"blog/random-musings-about-resumes/#tip-3-dont-just-list-your-responsibilities-focus-on-their-impact","title":"Tip #3 - Don't Just List Your Responsibilities. Focus On Their Impact","text":"<p>I always see resumes that list the job and then have a bulleted list of tasks that they completed at that job. While this does inform on what you worked on, it in no way focuses on why you were doing it or what it accomplished. </p> <p>Example: You worked for a small e-commerce startup and you were responsible for implementing the shopping cart feature. You put this on your resume:</p> <ul> <li>Wrote a web application using Flask, SQLite, and React for customers to use at checkout.</li> </ul> <p>This tells me nothing other than what technologies you used and the general vicinity of the purpose. Try rewriting it in this format:</p> <ul> <li>&lt;THING THAT WAS ACCOMPLISHED&gt;&lt;HOW YOU DID IT&gt;&lt;WHAT YOU USED TO DO IT&gt;</li> </ul> <p>So let's rewrite the example above</p> <ul> <li>Provided a seamless and enjoyable checkout experience for customers by implementing a shopping-cart web application using Flask, SQLite, and React.</li> </ul> <p>Immediately this tells me the impact you had, what you did and how you did it. It highlights your accomplishments and allows me to gauge the impact of your work because you told me the impact.</p>"},{"location":"blog/random-musings-about-resumes/#tip-4-brag-about-yourself-resumes-are-not-the-time-to-be-humble","title":"Tip #4 - Brag About Yourself. Resumes Are NOT The Time To Be Humble","text":"<p>Before we go any further, I know I have to address this. Do not put that you're a 10x engineer or the Superman of programming. When I say brag about yourself, I don't mean delve into the land of hyperbole. I mean be prideful of your accomplishments. Talk about them. I often see people downplay their contributions and that is a sure way to get passed over in a screening. If you don't believe in your work how can you convince others to? Don't be afraid to take credit for your work. When implementing the above tip where you describe the impact, talk about if as if you are a CEO selling the new feature to the board. They aren't going to say \"Ya, it's alright\". They're going to act like it's the swiss army knife of features that'll mow your lawn, do your taxes, and it's a hot plate.(1)</p> <ol> <li>\"And a hot plate!\"</li> </ol>"},{"location":"blog/random-musings-about-resumes/#tip-5-leave-out-or-condense-irrelevant-data-focus-on-the-data-that-shows-you-off","title":"Tip #5 - Leave Out or Condense Irrelevant Data. Focus On The Data That Shows You Off","text":"<p>Length is usually a hot point of contention regarding resumes. Many people think that a resume should only ever be 1 page and that's it.(1) I personally don't prescribe to this philosophy. If you have 10 years of relevant experience then you should list it. But the key point to that last statement is the relevant experience part. If you're a traditional student who is attempting to get their first job you don't need more than 1 page. In fact, I would highly discourage you from going over. If you've worked side jobs here and there that doesn't really show me your skills as a software engineer. I'm not saying you should include them, but 5 list items of the different pizza delivery jobs you had isn't necessary. Be sure to include any leadership or extra responsibilities here. Condense that down to one and say Various Pizza Delivery Jobs. This will again, save you valuable space on your resume for projects, coursework, volunteer work, etc.</p> <ol> <li> <p>I feel this is a leftover vestige of when every resume was printed out and had to be distributed physically to be reviewed. Multiple pages probably meant staples and a stack of resumes to sift through makes length an issue. But now that we do most things digitally and we have auto screening programs(1) that filter a lot of resumes out now. </p> <ol> <li> <p>I have my own thoughts on these but that's a rant for another day.(1)</p> <ol> <li>Oooh, an annotation in an annotation. That's nifty. Ok. I'll stop now.</li> </ol> </li> </ol> </li> </ol> <p>However, if you have previous professional experience in another field I would say that you should definitely include it. You may not need your entire work history, but a list item dedicated to acknowledging your past professions is 100% acceptable. I personally encourage it. I know many educators who are leaving the field to be software engineers. They always ask, \"Should I put this?\" and I startle them when I shriek \"YES! Being an educator is hard. You had a profession that taught you skills that will be relevant to any job. Include it!\"(1) I have another friend who was the creative director of Cirque de Solei for near of a decade and was one of the premier jazz trombonists in the world who recently decided he wanted to go into programming. He also asked if he should include that and I was baffled. Like, you were (and still are) a famous musician. Of course you put that! There are a lot of second career people joining tech now. Your journey is a part of you and you should embrace and include that. I personally, want to know all about it.</p> <ol> <li>This is usually when they take my caffeine away from me and make me sit down.</li> </ol>"},{"location":"blog/random-musings-about-resumes/#tip-6-ordering-matters-you-probably-shouldnt-lead-with-your-educationuniversity","title":"Tip #6 - Ordering Matters. You Probably Shouldn't Lead With Your Education/University","text":"<p>This one I'm mostly putting because I want to rant about it. Your About Me (if you have one) and experience should always be the most prominent thing on your resume. Next you can maybe have a section dedicated to your skills, volunteer work, outside projects, awards, etc. Notice how I don't list education there. Education is important. It should be on the page. It does not need to be anywhere near the top. I have heard some resume reviewers at \"prestigious\" schools say that it should be at the very top and even some recruiters from some companies. The next thing I'm going to say is very important so I'm going to emphasize it for effect</p> <p>This is utter bull shit.</p> <p>There are some companies that care greatly about where you got your education.(1) And they have the audacity to publicly muse \"Why don't we get more diverse candidates?\". Well when you only focus on a handful of schools that also have diversity problems you don't get to play the surprised card when your workforce all identify within the same demographic. Personally, I refuse to put my education high up on my resume. After your first job it is old, irrelevant data. After I got my first job I immediately removed my GPA. Who the hell cares?</p> <ol> <li>Looking at you FAANG.</li> </ol> <p>Unfortunately, me being pissed about this won't change these company's practices. I personally refuse to work for companies that think the school that I attended mandates my professional destiny, but they do pay a lot of money. If you want to play their games I can't stop you and you may want to include your education as the first thing. </p> <p>I won't.</p>"},{"location":"blog/random-musings-about-resumes/#things-i-didnt-cover","title":"Things I Didn't Cover","text":"<p>No doubtedly there are things that I didn't cover that may have some of you going \"But You Forgot to Talk About ___\". The reason I left your favorite resume pet peeve is because :</p> <ul> <li>I don't think it matters as much as others think it does.</li> <li>It wouldn't apply in a broad sense. There are definitely tips I can give that are more targeted towards specific fields, but I wanted this article to be generalized.</li> <li>I forgot \u00af\\_(\u30c4)_/\u00af</li> </ul> <p>At the end of the day, your resume is an opportunity to express yourself. We want to know who you are and your resume is our first glimpse into that. While experience matters, you'd be surprised how often \"Would this person vibe with the team\" has a large part to play in hiring decisions. You can teach someone to do almost anything, it's really hard to teach them to not be a jerk.</p>"},{"location":"blog/swimming-with-the-sharks-year-2-do/","title":"Swimming with the Sharks: A Recap of My Second Year at DigitalOcean","text":"<p>This year was definitely a year of extremes. From the highest of highs to the lowest of lows, this year will not be forgotten anytime soon. You know the drill, grab a hot beverage, a blanket, and gather round as I recap the year that was 2021.</p> <p>So, as always, with my blog posts that have a deadline, it's late. To be fair, I've been stuck on a blog post for about 6 months, and at this point, I don't know if it'll ever get published. I hope it does, but it's controversial, to say the least. In all that commotion, I forgot to do a yearly recap. So here we go.</p>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/swimming-with-the-sharks-year-2-do/#year-2-at-digitalocean","title":"Year 2 at DigitalOcean","text":"<p>This year I wrapped up my second full year at DigitalOcean as a Sr. Developer Advocate, having leveled up to a Senior role in June! I'm incredibly grateful to my peers at DigitalOcean for making it a stellar year, despite the difficulties we faced. </p> <p>If I had to describe 2021 as one word, I would describe it as \"extreme.\" I mean this in a sense, that things were either really good or really bad. For the bad, this year, I faced the heartbreak of losing not one but two very close coworkers to illness. This was a first for me. Both of these individuals were legends in their roles, and the shock of losing them derailed the organization for a bit. How could it not? To Hollie and Peeyush, you're missed more than you know.... Despite this, we continued on and still managed to pull off amazing feats this year. </p> <ul> <li>DigitalOcean went public! </li> <li>I got to help hire two new members to my team! <ul> <li>Welcome, Phoebe and Kim!</li> </ul> </li> <li>I was promoted! </li> <li>We finally created a web show called Cloud Chats which I got to help design and host. </li> <li>Created an education program for Marketing around DO products<ul> <li>I taught my CMO and the Marketing team how to deploy to Kuberenetes<sup>1</sup>.</li> </ul> </li> <li>Made lead of DigitalOcean Navigators program.</li> <li>Continued to help educate and empower the Community</li> </ul> <p>These are just some of the events that made 2021 the year that it was. I'm proud of my team, my extended teams, the Marketing organization, and DigitalOcean as a whole for making it through this challenging year.</p>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/swimming-with-the-sharks-year-2-do/#2021-stats","title":"2021 Stats","text":"<p>So what all did I do this year? Here are the stats for my accomplishments of 2021:</p> <ul> <li>Code:<ul> <li>Updated PyTexas Website pytexas.org</li> <li>Prepare Technical Demos for numerous Tech Talks MasonEgger-Demos</li> <li>Hacktoberfest Repo Label/Topic Manager Improvements</li> <li>Education Tool for setting up a lab-type environment using Droplets DigitalOcean Classroom</li> </ul> </li> <li>Content:<ul> <li>Wrote 4 Tutorials for DigitalOcean's Community Site<ul> <li>How To Build a Discord Bot in Python on Ubuntu 20.04</li> <li>How To Install the Windows Subsystem for Linux 2 on Microsoft Windows 10</li> <li>How To Develop a Docker Application on Windows using WSL, Visual Studio Code, and Docker Desktop</li> <li>How To Set Up an ASGI Django App with Postgres, Nginx, and Uvicorn on Ubuntu 20.04</li> </ul> </li> <li>Wrote 10+ issues of DigitalOcean's Infrastructure as a Newsletter IaaN</li> <li>Produced numerous short \"Quick Start Videos\" for DigitalOcean's YouTube page</li> </ul> </li> <li>Community:<ul> <li>Appointed Conference Chair of PyTexas 2022</li> <li>Created and Hosted 40 Episodes of Cloud Chats</li> <li>Presented at the following conferences:<ul> <li>Python Web Conf - A Year Without Pants: Strategies for Successful Remote Work</li> <li>PyOhio (Short Version) - The Enters and Exists of Context Managers</li> <li>Conf42 Python - The Enters and Exists of Context Managers</li> <li>DigitalOcean Deploy - Grow Your Business with Scalable Apps Using DigitalOcean App Platform</li> <li>All Things Open (Short Version) - Write Docs Devs Love - Tips and Tricks to Level Up Your Tech Writing</li> <li>All Things Open - Let Me Introduce Y'all to Y'all</li> <li>PyGotham - Write Docs Devs Love - Tips and Tricks to Level Up Your Tech Writing</li> </ul> </li> <li>Presented at the following meetups:<ul> <li>PHPdx Hacktoberfest Presentation</li> <li>Texas State University EXE Student Club - Hacktoberfest Presentation</li> <li>Texas State University EXE Student Club - Intro to Python</li> <li>PyCharm Tech Talk - Building Your First Slackbot in Python</li> </ul> </li> <li>Presented the following Tech Talks for DigitalOcean:<ul> <li>Top 10 Tips for Protecting Yourself and Your Data Online</li> <li>Keeping Your Sites and Users Safe Using SSL</li> <li>Getting Started With Flask</li> <li>Build a Web App With Django</li> <li>Building a REST API With Django REST Framework</li> <li>Getting Started With Python FastAPI</li> <li>Deploying Your Python Applications</li> <li>Developing on Microsoft Windows With the Windows Subsystem for Linux (WSL)</li> <li>Building Your First Slackbot With Python</li> <li>Jumping Into Django Models</li> <li>Getting Started With Kubernetes on DigitalOcean</li> <li>Build Your First Command Line Tool in Go</li> <li>Build and Deploy a Custom Droplet Image on DigitalOcean</li> <li>Learn to Load Balance Your High Traffic Sites</li> </ul> </li> <li>Multiple livestreams on the DigitalOcean Twitch channel DigitalOceanTV</li> </ul> </li> </ul>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/swimming-with-the-sharks-year-2-do/#what-does-2022-hold","title":"What Does 2022 Hold?","text":"<p>Barring some disaster, 2022 will find me continuing to grow as a developer and Developer Advocate at DigitalOcean. I'm still enjoying waking up and going to work every morning. As long as that is the case, I'll stay where I am. When the day comes that I start to dread going to work every day, that's when I'll depart. But I do not anticipate that happening anytime soon.</p> <p>Next year I have a lot of projects I want to expand upon. Some of which are work-related that I can't necessarily speak about publicly at the moment, so instead, here are some of my personal goals for 2022. I'm putting these out into the world to hold myself accountable:</p> <ul> <li>No sodas<ul> <li>I did this in 2020 and was super proud of myself. 2021 saw a backslide given the state of everything, so 2022 is a course correction for this.</li> </ul> </li> <li>Lose 50 lbs<ul> <li>I have long struggled with my weight, which is a super sensitive subject for me. 2022 is the year I take control of my health again</li> </ul> </li> <li>Write &amp; publish a book<ul> <li>I have been kicking this can down the road long enough. It's time I finished my proposal and get a book published.</li> </ul> </li> <li>Spend at least 10 hours a week writing code<ul> <li>Believe it or not, Developer Advocates can go months without writing a single line of code<sup>2</sup>. I want to get back into the habit of writing code regularly</li> </ul> </li> <li>Become a Full Stack Developer<ul> <li>It's time. I've been avoiding Front End work my entire career, and it's time that I sit down and learn how to do it. At least to the proficiency level that I can build my own front end to applications I'm building.</li> </ul> </li> </ul> <p>Thank you to everyone who has supported me and my work. I look forward to all of the challenges that 2022 has to bring. Happy Holidays and a Happy New Year!</p> <ol> <li> <p>The title of my autobiography will be called \"Kubernetes for Marketers.\"\u00a0\u21a9</p> </li> <li> <p>I don't include my \"Hello World\" type coding here. Sure I write sample apps and such, but these are so low level that, at least to me, it's not sufficient to keep up my skills. I want to write and build actual production.\u00a0\u21a9</p> </li> </ol>","tags":["DigitalOcean","Developer Relations","Developer Advocate","Community"]},{"location":"blog/how-i-write-conference-talk-proposals/","title":"How I Write Conference Talk Proposals","text":"<p>As a Developer Advocate, speaking at conferences is an integral part of my career. I submit many papers to conferences all around the world. Over the years, I've developed a process for thinking about, writing, and submitting talks for conferences. In this post, I'll share with you my process for writing CFPs.</p> <p>So you want to speak at a conference? Congrats! That is a fantastic goal! The decision to speak at conferences was one of the best decisions I have made in my career. I've learned so much, made countless friends, and had some of the best times of my life at various tech conferences. Whether it's your first time speaking or your thousandth, I hope you get something useful out of this post.</p> <p>In this post, I'll cover how I approach writing CFPs. Having not only spoken at many events and participated on program committees for various conferences, I'll share with you the practices that I have either used or seen in successful talk proposals. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#first-things-first-determine-your-audience","title":"First Things First, Determine Your Audience","text":"<p>A common mistake I see people make when they first decide to speak is to jump straight into brainstorming a topic that they want to talk about. This isn't a bad way to approach this, but people often struggle to think of a topic for one big reason: they can't visualize their audience. Are you giving your talk to a room full of C-Suite individuals? Students? DevOps Engineers? Determining your audience and their skill level will guide you to topics that may be of interest to them.</p> <p>For Example: I enjoy talking to the Python community and DevOps/SRE communities. Which almost immediately disqualifies talks about JavaScript frameworks(1) from my list of possible topics. This may seem simple. You may be asking yourself, \"Why even write this?\" But you'd be surprised how many people I've helped with CFPs who I unstuck after asking \"Well, who do you want to present to? Who is your audience?\"</p> <ol> <li>But not entirely, maybe you want to introduce, say, the Python community to this amazing JavaScript Framework. Go for it! Just be sure to show your audience how they can utilize it. </li> </ol> <p>Once I have determined my target audience(s), I then think about topics.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#how-to-pick-topics","title":"How To Pick Topics","text":"<p>So now that I have my audiences in mind, I ask myself the following questions:</p> <ul> <li>What is exciting in that community right now?</li> <li>What topics are people talking about in that community right now?</li> <li>What topics aren't being talked about right now that I think should be discussed?</li> <li>What topics do I want to talk about?</li> <li>What issue am I trying to solve/address?</li> </ul> <p>If I have multiple audiences in mind, I will briefly explore the overlap between them. Depending on the sprawl of your audiences, this may be easy, or it may be virtually impossible. Don't feel bad if you can't find a technical topic covering both.</p> <p>For Example: Python and DevOps have a good amount of overlap. I could explore topics such as using and/or extending Ansible, a Python-based DevOps tool. I could explore topics around simplifying the deployment of Python applications. The overlap here isn\u2019t to hard to find. These talks are likely to be good candidates for both Python and DevOps conferences. But I don\u2019t have to do this. Maybe I want to write a talk that\u2019s solely about Python fundamentals. Great! I just would\u2019t submit it to the DevOps conferences.</p> <p>On the flip side, finding overlap can be nearly impossible. Say I\u2019m interested in CSS and Kubernetes(1). Trying to find a talk that is applicable and interesting to both communities isn\u2019t impossible, but you may spend more time trying to find it than you want.</p> <ol> <li>An odd pair, but not completely unheard of.</li> </ol> <p>While it is important to focus on topics the community might find useful, it is just as important to focus on topics that you actually want to speak about. Excitement and engagement is contagious, and if you are excited about a topic then your audience will be too. There\u2019s few things worse than listening to someone give a talk about something they aren\u2019t interested in.</p> <p>Once I have determined the topic that I want to talk about, then I start to think about what level I want to write my talks.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#talk_levels","title":"Talk Levels","text":"<p>I typically categorize talks based on the audience level,  difficulty level, and the tool level.</p> <p>In most CFP systems, you'll see options for the following audience levels:</p> <ul> <li>Beginner</li> <li>Intermediate</li> <li>Advanced</li> <li>All</li> </ul> <p>Audience level is the level of expertise you expect the average audience member to have. Audience level can be more of a \"minimum requirements\" level than a cap. You may want to institute basic prerequisites for your talk so people know what to expect before going in. For example, if I'm giving a talk on little-known SSH features, I would expect the audience to have a basic understanding of *Nix like systems and maybe even that they have used SSH in the past. Having a set idea of your desired audience will help you know where to start your talk. If my audience were beginners, I might start by introducing SSH. If I know they're more advanced, maybe I can skip past that part or cover it quickly. This doesn't mean that intermediate and advanced developers won't benefit from a beginner talk on an unfamiliar topic, of course. You'd be surprised how often more experienced developers attend beginner-focused talks to stay sharp.</p> <p>Difficulty level is the knowledge level at which you target the talk on this specific topic. This is different from audience level because you have direct control over this. When writing my talks, I always keep difficulty level in mind to ensure that I don't sway too far off course. This can help me keep from going too in-depth on a beginner talk to keeping me from spending too much time on basic concepts in an advanced talk. Some topics are complex by their very nature. Don't worry, you can give different-level talks on the same core topic. </p> <p>Example: The Python GIL(1),(2)</p> <ol> <li>There are three things in life that are constant: Death, Change, and there will be a talk on the GIL at PyCon this year.</li> <li>For those of you that don't know, the GIL is the Global Interpreter Lock, and it is the thing responsible for Python not being able to run on more than one CPU core, blocking true parallelism. It's also the thing that stops you from having to track down wacky-ass race conditions and other super fun bugs that disappear and reappear due to the nature of concurrency, so maybe don't look a gift horse in the mouth, ok?  </li> </ol> <p></p> <ul> <li>Beginner level talk - \"What is the GIL and why you should care\"</li> <li>Intermediate level talk - \"How I Got Around The GIL by doing X\"</li> <li>Advanced level talk - \"A Deep Dive Into Garbage Collection and the GIL\"</li> <li>All level talk - \"How Python Core Developers are approaching removing GIL\"</li> </ul> <p>As you can see, you can fit any topic to any level. Sometimes I have varying slides in my deck that I hide/unhide depending on the audience level.</p> <p>Also, note how there is an All Level category. While some conferences will use these interchangeably, that doesn't mean that they are. Advanced developers sitting in a beginner talk about the basics of Python Strings may not benefit from that talk. However, a talk about how to build a community around your Open Source project is likely to be enjoyed by everyone of all levels. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#arent-audience-level-and-difficulty-level-extremely-similar","title":"\"Aren't Audience Level and Difficulty Level extremely similar?\"","text":"<p>Yes. They ask a lot of the same questions, they just have a different focus. You can often use one to help craft the other. Knowing the difficulty level you want to speak at somewhat mandates the audience level and vice-versa. Even in my process, I don't explicitly write down the difficulty level of my talks, just the audience level. I have, however, thought a lot about both. So while they are incredibly similar, they are distinct enough to think of them separately. </p> <p>Finally, let's talk about tool level. This is very subjective as many people will disagree with what is considered a beginner tool or not. However, there are many tools that obviously fit into a category. No one on Earth has ever said that Kubernetes is a beginner-friendly tool.(1) So, while your opinions on this may vary, it is good to understand your topic's perceived skill level. I find it easy to just have the following levels:</p> <ol> <li> <p>And if you have, I call bullshit.</p> </li> <li> <p>Beginner</p> </li> <li>Intermediate</li> <li>Advanced</li> </ol> <p>This primarily helps me understand how much work and care I need to take when writing the talk. Say I want to give a Kubernetes talk at the beginner level. Kubernetes isn't typically considered a beginner tool, so bringing it to a level that a beginner can understand may prove challenging. As you saw above in my audience level section, you can talk about anything at any level. Keeping tool level in mind also stops me from writing Advanced Advanced proposals. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#your-topic-doesnt-have-to-be-complex","title":"Your Topic Doesn't Have to Be Complex","text":"<p>A mistake I made very early in my speaking career was trying to write obscenely complex talks on edge case topics. The first proposal I ever wrote for a Python conference was about building python packages as <code>RPMs</code> so you could utilize the CentOS package manager to handle both system and Python packages. This talk never got selected, and rightfully so.(1) The proposal was overly complex and an extreme fringe niche. That isn't to say that complex or unique ideas won't get accepted, but they should represent an interesting problem or a use case that a subset of the community will experience. My talk was neither. </p> <ol> <li>It's my talk, so I can shit on it. While it was an interesting problem, it would have appealed to, like, two people.</li> </ol> <p>From an organizer's point of view, complex talks can be difficult to schedule. We have to think of our attendees as a whole. Very few conferences consist of solely advanced engineers. A lot of beginners attend conferences as well. Therefore, we have to strike an even balance of talks. This tends to have us scheduling mostly beginner/intro talks(1), followed by intermediate talks, and then a handful of advanced talks. So, complex and advanced talks will have fewer slots allocated to them, reducing the chance of your niche talk being selected.</p> <ol> <li>Note here that intro talk doesn't necessarily mean beginner. It means that it is an introduction to a topic. The topic itself could be advanced. What it isn't is a rare one-off use case on a rarely used feature in an advanced library.</li> </ol>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#your-topic-doesnt-have-to-be-technical","title":"Your Topic Doesn't Have to Be Technical","text":"<p>Another common misconception I see is that talks have to be technical. This couldn't be further from the truth(1). Talks on community, soft skills, non-technical skills such as leadership, program management, etc., are all great options.</p> <ol> <li>In fact, some of my favorite conference talks have had nothing to do with programming at all.</li> </ol> <p>Now that I've thought about who I\u2019m speaking to, what I want to speak about, and the tool level I want to hit  I turn to my personal process for writing my CFP.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#how-i-write-cfps","title":"How I Write CFPs","text":"<p>Over the years of applying to many different conferences that all seem to use a different CFP program and process, I've developed a template to write every single one of my talks. This template can be rather non-linear. I don't just fill it out top to bottom. I bounce around using previous sections to help write the next. You can see my template below or find it on my GitHub here. Below this, I'll explain how I use every section of my template.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#my-cfp-template","title":"My CFP Template","text":"<pre><code>## Type\nTalk, Workshop, Lightning Talk\n\n## Title\nSome Fun, Clever Title\n\n## Category\nSingle Overarching Theme\nEx: DevOps, Python, Community\n\n## Elevator Pitch (300 Character Limit)\n300 characters or less elevator pitch. \nInclude Audience Takeaways\n\n## Audience\n* Who is this for?\n* Can be many different audiences\n\n## Audience Level\nExpertise required for this talk\nInclude prerequisites\n\n## Audience Takeaways\nWhat will the audience take away \nand/or learn from this talk? \n\nShould be 3 things\n\n## Outline\n* Timed outline (1 min)\n* For the Presentation (5 min)\n* More detail is good here (20 min)\n\n## Description\nSlightly longer description. \nExpands upon elevator pitch. \nBe sure to include Audience Takeaways\n\n## Internal Notes (For Your Eyes Only)\nAll the nitty-gritty of the talk. \nYour scratch paper\n\n## Additional Notes\nAnything else. \nPresentation materials needed\nWhy you're qualified to speak on this\nEtc.\n</code></pre>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#type","title":"Type","text":"<p><pre><code>Talk, Workshop, Lightning Talk\n</code></pre> What type of presentation is this? What format will work for this presentation? When you have a lot of papers, it's good to have this right at the top so you don't waste time trying to figure out what you meant when you wrote this six months ago. There can be more than one type. It's rare, but I do have a few talks that could both be Talks and Lightning Talks, depending on what I omit.</p> <p>Options include:</p> <ul> <li>Talk (Usually 15 - 45 minutes)</li> <li>Workshop (Usually 60 - 180 minutes)</li> <li>Lightning Talk (Usually 5 - 10 minutes)</li> </ul>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#title","title":"Title","text":"<p><pre><code>Some Fun, Clever Title\n</code></pre> To me, the title of a talk is everything. It needs to be catchy while also setting expectations for the talk. I am a big fan of the \"Catchy first title: explanation subtitle\" format. You'll see most of my talks have this title format.</p> <p>For example:</p> <ul> <li>Docs Like Code: Continuous integration for documentation</li> <li>SSH Can Do That?: All the things you didn't know about SSH</li> <li>A Year Without Pants: Successful Strategies for Remote Work</li> </ul> <p>However, I don't constrain myself to this format. It is my favorite, but sometimes it just doesn't work. But titles should be entertaining and engaging. Attendees have to choose from a wide array of talks that they are given very little information on. Having a good title will attract them to your talk. And remember, the conference organizers and talk selection committee are also your audience. Another one of my talk titles is \"The Enters and Exits of Context Managers.\" From the outside looking in, this talk is a bit confusing. It does explain that you're going to be learning about Context Managers, but with a little joke. The joke here is that <code>__enter__</code> and <code>__exit__</code> are ways to create a Context Manager in Python. This is a play on the phrase \"The ins and outs\" by changing it up with synonyms that fit perfectly.(1)</p> <ol> <li>As someone who enjoys clever wordplay, I'm still proud of myself for this talk title. I consider it one of my crown achievements.</li> </ol> <p>Another tip I have for titles is to make them Iambic(1). If you don't know what this is, I highly recommend you look it up. The tl;dr is that, in English, it is pleasing to hear words that follow a short syllable followed by a long syllable. It's rhythmic and oh so complex. </p> <ol> <li>AP English for the win. </li> </ol> <p>If you are writing a paper in a language other than English, I would recommend looking into what speech patterns are pleasing in that language.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#category","title":"Category","text":"<p><pre><code>Single Overarching Theme\nEx: DevOps, Python, Community\n</code></pre> Your category is a single overarching theme of the talk. I am adamant about keeping this as a single category. If I find myself with many different categories and no prevailing one, then the talk is too complex, and I need to simplify it. Try to hold yourself to this; it will make your talk clearer.</p> <p>Examples: </p> <ul> <li>DevOps</li> <li>Python</li> <li>Community</li> </ul>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#elevator-pitch-300-character-limit","title":"Elevator Pitch (300 Character Limit)","text":"<p><pre><code>300 characters or less elevator pitch. \nInclude Audience Takeaways\n</code></pre> Papercall is a popular platform that conferences use to gather papers. The first part of their format includes the \"Elevator Pitch\" and they have a limit of 300 characters or less. I used to dislike this format, but now I think it's become my strongest asset. This is a great way to write an abstract. There's the old quote, \"If I had more time, I would have written a shorter letter.\" Concisely portraying your thoughts on a specific topic is not a trivial effort. When I write an elevator pitch, I tend to have a two-way process. I'll either write a longer description and prune it down to fit the elevator pitch, or write the elevator pitch and then expand upon it to fill the Description. I've found that the former tends to work better for me, as it allows me to get my thoughts out first. Whenever I write the elevator pitch first, I'll often find myself coming back to modify it as the Description forms.</p> <p>Also, in this section, I always include my Audience Takeaways. This makes it even more difficult because the takeaway can easily take 100 - 150 characters. So I have to be even more concise. I believe, that it is paramount that you include the Audience Takeaways. A good abstract should explain what you will talk about and what people will gain by coming to your talk. Conference attendees usually see this in the program, and they know immediately by reading it if the talk  is right for them.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#audience","title":"Audience","text":"<p><pre><code>* Who is this for?\n* Can be many different audiences\n</code></pre> As I said earlier in this post, you must know who your audience is. In this short section, just write it out. Is it for Python Developers? DevOps Engineers? Marketers? Make a bulleted list and write it out. Your audience can be many different types of people. You don't need to limit it to one, but don't feel bad if it is just one.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#audence-level","title":"Audence Level","text":"<p><pre><code>Expertise required for this talk\nInclude prerequisites\n</code></pre> As mentioned above, having a set level for the difficulty of the talk will  help you scope the content. I covered how to think about audience level in-depth above in the section. You should also explicitly write down any prerequisite knowledge you expect the audience to have coming into your talk. Sometimes there is a place to share this in the CFP submission, but if there isn't, it is still useful for scoping the talk. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#audiece-takeaways","title":"Audiece Takeaways","text":"<p><pre><code>What will the audience take away \nand/or learn from this talk? \n\nShould be 3 things\n</code></pre> Audience Takeaways are one of the most vital parts of a CFP, and you'll rarely see a CFP ask for this(1). It isn't enough to tell people what your talk about, but what they are getting out of your talk. Single-track conferences are rare. There are usually at least two or more talks happening simultaneously. Let the viewer know what to expect from your talk so they can choose the correct talk for them.</p> <ol> <li>And kudos to the ones that do.</li> </ol> <p>In this section, I write three bullet points of takeaways I want attendees to get out of my talk. And three is a hard stop for me. If you've never heard of The Rule of Three you should read up on it. The tl;dr is that trios of things are more satisfying and effective than other numbers. There's some deep psychology around it that I can't explain, but it works. </p> <p>When it comes to writing them into my Elevator Pitch or Description, they can take many forms. The main thing to focus on here is the Rule of Three. Looking back at my successful talk proposals, 95% of them have utilized it in the Elevator Pitch in some way. </p> <p>From a conference organizer's viewpoint, I love seeing takeaways. It tells me that the talk is well thought out. Also, it helps me see if I think the talk will resonate with the audience of my conference. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#outline","title":"Outline","text":"<p><pre><code>* Timed outline (1 min)\n* For the Presentation (5 min)\n* More detail is good here (20 min)\n</code></pre> Outlines are an extremely helpful tool. I tend to outline my talk with the titles of my slides. I may have one or two slides that aren't represented here, but most of them are. I also put time estimations next to each section. These are immensely useful, helping me scope the talk and determine what I do and don't have time to talk about. However, these are estimates, and I treat them as such. Don't feel bound to these times. Adjust as you see fit. </p> <p>From a conference organizer's viewpoint, outlines help me so much. I can see exactly what you're talking about, what you're trying to get across, and whether or not I think this will be a good talk for my conference. The subset of talks that include a detailed outline and the subset of talks that get selected for the conference overlap almost perfectly. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#description","title":"Description","text":"<p><pre><code>Slightly longer description. \nExpands upon elevator pitch. \nBe sure to include Audience Takeaways\n</code></pre> This is where you can go into great depth about your talk without a character  limit. I tend to write this first to get a full idea of my talk and then condense it to fit into the Elevator Pitch. You may end up submitting this section in a CFP or you may not. It's still important to fill this out to help define what you want to accomplish in your talk. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#internal-notes-for-your-eyes-only","title":"Internal Notes (For Your Eyes Only)","text":"<p><pre><code>All the nitty-gritty of the talk. \nYour scratch paper\n</code></pre> These are my notes. I put links to resources to help me write the talk, thoughts I had while writing the paper. Anything and everything can go here. These shouldn't be shared with conference organizers.</p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#additional-notes","title":"Additional Notes","text":"<p><pre><code>Anything else. \nPresentation materials needed\nWhy you're qualified to speak on this\nEtc.\n</code></pre> A lot of CFPs will have a section for \"Anything else.\" This is a great section to put extra requirements you'll need for your talk. These could be anything from an extra monitor to a laser pointer. If you need special accommodations, such as a lower podium or equipment, be sure to fill this in. The conference will likely already have the items you need, but it is always good to be explicit in your requirements.</p> <p>Many people will often put here why they are qualified to speak on this topic. I'm personally not a fan of this, but I understand why people do it. If you want to put this in your CFPs, go ahead. A tip I would say is to never say that you are \"the most qualified person to speak on this.\" I never put this. There is always someone more qualified to speak on this topic than me.(1) If I put my qualifications here, I explain why I'm qualified to speak on this overall. Also, don't put identifying information in here. Conference organizers are trying hard to keep the selection process fair and anonymous.</p> <ol> <li>That being said, if you are the most qualified person to speak on this, you can put it. I say this because I have a lot of friends who often speak on their own open-source projects, and they are, in fact, the most qualified person to speak on this topic. However, for the sake of anonymity, maybe still avoid this. If you say, \"I wrote this library, hence I'm the most qualified to speak,\" I probably will be able to figure out who you are. And we're trying to maintain fairness in our CFP selection process. </li> </ol>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#my-yearly-process","title":"My Yearly Process","text":"<p>Because my job expects a certain level of speaking engagements from me every year, I have a process around writing talks. Every year in late Q4, when most of the company is wrapping up and preparing to go on winter break, I sit down and write all of my conference talks for the next year. The past few years, I have written anywhere between 5-8 talks for the upcoming year. This doesn't mean that if a great idea strikes me, I won't write a paper about it. I do this so when a conference opens up that I want to speak at, I don't have to stop what I'm doing to write a proposal. The current audiences that I'm looking to speak to are the Python and DevOps communities. So I try to write talks that I think those communities will find interesting. That doesn't mean that the talks focus on a Python topic. I am somewhat known in speaking circles for talking about documentation and technical writing. These talks are relevant to both communities, so it's a win-win for me. In the past few years, I have started writing more specific talks focused on individual technologies. I usually write 2-3 of these specific talks a year, and then the rest of my talks will be broad enough that I can give them at any conference. These broader talks focus on documentation, \"soft\" skills, and community building. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#how-do-you-feel-about-giving-a-talk-more-than-once","title":"How Do You Feel About Giving a Talk More Than Once?","text":"<p>There is a big debate around if/when you should give a talk more than once. I take a rather selfish stance here and say, if I spend so much time and effort writing it, you bet I'm going to give it more than once. However, I do have some rules around it. </p> <p>First, I won't give a talk more than twice virtually. The first year I started  speaking, which was 2019, I gave my Building Docs Like Code: Continuous Integration for Documentation talk six times at various regional Python conferences. We must remind ourselves that very few people go and search out random conference talks on YouTube.(1) Giving the same talk at different regional conferences means getting it in front of more people who more than likely would not have seen it otherwise. With the accessibility of virtual conferences, more people can attend, and I find this as a reason to not over-saturate the virtual conference market with these talks. </p> <ol> <li>Don't believe me? Go look at the views.</li> </ol> <p>Second, when I'm tired of a talk, I stop giving it. My Docs Like Code talk was fantastic. I loved writing it; I loved presenting it. After six conferences and  a handful of meetups, I'm tired of giving it. I may write version 2.0 in the future, but that talk is purposefully retired for now.</p> <p>Third, if I give a talk and determine I don't like it, I might not give it again. I usually try to fix a talk if I feel it doesn't work, but not every talk is a winner. The talk may have felt good on paper, but I didn't like it in practice. The only way to \"get good\" at something is to practice. Not everything is going to be great. Don't cling to something if you aren't feeling it. There will be more opportunities. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/how-i-write-conference-talk-proposals/#should-i-submit-a-talk-to-this-conference","title":"\"Should I submit a talk to this conference?\"","text":"<p>Yes! I encourage everyone to submit talks to conferences. If you get selected, great! If you don't, feel free to reach out to the organizers for feedback on  your proposal. You'll be surprised how often they'll take time to do this. Conference organizers all want you to succeed. They'll either come back with some tips on your talk, or they could tell you that your talk was great, but it just didn't win out against other talks. </p> <p>The only way to get better at anything is to practice, fail, and try again until you succeed. If you don't get selected, keep at it! It took me three years of submitting papers to conferences to finally start getting accepted. You'll get there eventually, and I look forward to watching your talk when you do. </p>","tags":["Conferences","Speaking","CFPs"]},{"location":"blog/oh-shit-i-havent-blogged-in-a-while/","title":"Oh Shit, I Haven't Blogged in a While","text":"<p>You ever look at your blog and say to yourself \"I should blog more\"? Ya. I've been doing that for almost two years now. Now while most of you probably follow me already, maybe you missed a few moments along the way. So buckle up, I'm going to catch up on two years of blogging in this post. </p> <p>My last blog(1) was on January 30, 2022 and it was actually one of my favorite blogs to write. 2022 was an interesting year but I do believe that it was around this point that my burnout from DevRel started to settle in.</p> <ol> <li>It was about How I Write Conference Talk Proposals</li> </ol>","tags":["Blogging","Life"]},{"location":"blog/oh-shit-i-havent-blogged-in-a-while/#so-what-happened","title":"So What Happened?","text":"<p>For those of you who aren't a Developer Advocate, let me just say that time-to-burnout in DevRel is astronomically high. I may write another blog post that about this, but the tl;dr is talking to people is exhausting, the industry doesn't know what it wants DevRel to be, so you just kind of flail between projects for months on end, touching everything but not long enough to feel accomplished until you eventually just get tired and consider if you could make a living raising chickens. </p> <p>At the time I was working for DigitalOcean. While the company was great, you could feel the change settling in post-IPO. The fun startup atmosphere was evaporating quickly and decisions were being made that I wasn't fond of. On top of that, DigitalOcean is pretty notorious for underpaying. They trade on people's love of the brand and the pride of working there(1). Due to this a few other things I decided to venture out DigitalOcean and explore other opportunities. I found myself at a new company, Gretel. Early stage startups are interesting because they can pivot on a dime. I thought I was joining a company focusing on data privacy for backend developers. Within a few weeks of my arrival they either pivoted to generative AI for Data Science or were already there and there was a communication failure during the interview process. That being said, their  product was already a generative AI model, I just think their customer profiles shifted and instead of focusing on data privacy for tooling, it was more centered  around data privacy for generative AI. Either way, it was not what I signed on for.  While AI is interesting to me, I have absolutely zero desire to work in it. While at Gretel I was met with many challenges. I gave it my best try, however,  our visions on Developer Relations never coalesced which ended with me leaving the company to pursue other options. I wish them nothing but the best(2). Their  product is actually super fucking cool and will definitely change the industry,  but AI is not my passion. DevOps and Backend Engineering is.</p> <ol> <li> <p>At least this was the case for me. If you ask them internally they're proud that they pay within a percentage of other companies that they deem acceptable. Long story short, it's not acceptable and leads to turnover.</p> </li> <li> <p>One day I'll write a blog about how to know when a job isn't a good fit and when to leave. That kind of content would have helped me here a lot.</p> </li> </ol> <p>Also around this time myself and some other organizers hosted the  PyTexas 2022 Conference. This was my first year as  conference chair and most of the responsibility fell on me. This was a very stressful time as we were chasing the easing of Covid restrictions up until the day of the conference. We had made the decision to go back in-person in March 2022 and to say it was challenging would be an understatement. Either way, I'm proud of the conference we delivered. This did result in me being elected to the PyTexas Foundation Board where I have served as President since.</p> <p>I was only at Gretel for nine months. I learned a ton about an industry I knew little about, met many awesome people, and overall had a good time. I view this as a little detour in my career. </p>","tags":["Blogging","Life"]},{"location":"blog/oh-shit-i-havent-blogged-in-a-while/#temporal","title":"Temporal","text":"<p>After leaving Gretel I land a position as a Developer Educator (Sr. Technical Curriculum Developer) at Temporal Technologies. It's actually funny that I landed here, as I had interviewed for a Developer Advocate role here while I was interviewing at Gretel. After that, I stayed in contact with the Temporal recruiting team about once a quarter to check in and see how things were going. Temporal was super cool and I was hoping to eventually land a role there in my career. I just didn't anticipate it happening so soon. </p> <p>I was fortunate, one of my ex-colleagues and friends from DigitalOcean Brian Hogan had a role opening up on his team and he was looking for \"road weary DevRel people who like to teach\". Well that fit me perfectly, I applied, and got the role.</p> <p>I plan on doing a Recap blog post about my first year at Temporal, so check back in late January for that. </p> <p>Oh. I also ran PyTexas 2023. I'll have to write about all that too.(1)</p> <ol> <li>That's it Mason. Just keep adding stuff to the fucking list.</li> </ol>","tags":["Blogging","Life"]},{"location":"blog/oh-shit-i-havent-blogged-in-a-while/#so-whats-next","title":"So What's Next?","text":"<p>A lot. I'm writing a book. More on that later. PyTexas 2024 is coming up. I'm doing a lot of work to expand the PyTexas Foundation. We have a  meetup now.  I plan on writing a full recap post  on the 2024 conference on the PyTexas site. I'm working my ass off at Temporal and will have more to share on that in a later  post. </p> <p>Hopefully now that I've filled in the gap I wont feel stuck unable to publish more blogs and tutorials. I felt guilty that I hadn't posted in so long and it stopped me from posting otherwise. </p> <p>The psychology of writing can kick your ass. I'm dealing with that while writing my book.</p> <p>Anyway, thanks for catching up. Here's hoping my next post isn't in like, 2025.</p>","tags":["Blogging","Life"]},{"location":"blog/oh-shit-i-havent-blogged-in-a-while/#other-shit-i-forgot","title":"Other Shit I Forgot","text":"<p>Oh. I also am the Deputy Province Governor of Province 9 of the Phi Mu Alpha Sinfonia Fraternity of America. </p> <p>I got another puppy. A yellow labrador named Butters. </p> <p></p> <p>But they grow up so fast</p> <p> </p>","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/","title":"2023 Is Dead! Long Live 2024!","text":"<p>What a year it's been. I've long disliked the cliche \"That year just flew by!\" but holy shit this year really did. This year I changed jobs, organized a regional conference, started a new meetup, and got a new puppy just to name a few things.</p>","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/#a-year-in-review","title":"A Year In Review","text":"","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/#career","title":"Career","text":"<p>In mid-January I decided to leave my job as a Developer Advocate at Gretel.ai and make the jump to Developer Education at Temporal Technologies. After four years in Developer Relations, I was burned out of speaking and wanted to take the opportunity to improve my writing and teaching skills. Luckily a good friend of mine Brian Hogan had an opening on his team so I applied and got the role. I had worked with Brian at DigitalOcean and knew that I had a once-in-a-lifetime opportunity to learn about writing and developer education. This first year at Temporal I delivered four courses, Temporal 101 and 102 in Java and Python, a tutorial, and various updates to the product documentation. The culmination of a lot of this work was getting to give Temporal 101 and 102 live and in-person at Temporal's annual Replay conference. I've learned a lot about Durable Execution and just how cool the technologies are. I actually finished a fifth course, but my team decided to hold off releasing it for a bit. But I'm still going to count it for this year!</p> <p>I did far less speaking this year than I have done since 2019. And by far less I mean practically zero. I gave one workshop but I needed a break from public speaking. I am finally feeling ready to speak at conferences again and have started writing a few CFPs.</p> <p>Maybe I should do a blog post on DevRel burnout. If you think so Tweet at me.</p>","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/#pytexas","title":"PyTexas","text":"<p>This was by far the busiest year for me with regards to my PyTexas work. We delivered a phenomenal conference in April and immediately moved into planning the 2024 conference. We were able to announce the 2024 dates at the end of our 2023 conference, something that had never been done before. We also finally sat down and created a PyTexas Foundation website and aligned on a singular tech stack for all of our assets. Finally, we launched the PyTexas Virtual Meetup in September and are still going strong! </p> <p>There's a whole blog post about the PyTexas work that has been done on the foundation website, so check that page out on January 5<sup>th</sup> for the release!</p>","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/#personal","title":"Personal","text":"<p>I got a new puppy! Welcome Butters! His brother Loki loves him.</p> <p></p> <p>He's growing up fast! </p> <p> </p> <p>Other than that it was a quiet year on this front. </p> <p></p>","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/#2023-stats","title":"2023 Stats","text":"<p>A brief list of the things I accomplished this year that I'd like to highlight:</p> <ul> <li>Code:<ul> <li>Migrated my personal website to Mkdocs Material</li> <li>Established a unified tech stack for PyTexas websites</li> </ul> </li> <li>Content:<ul> <li>Published Build a Temporal Application from scratch in Java</li> <li>Published various parts of the Temporal Java Dev Guide</li> <li>Published the Temporal 101 Courses in Java and Python</li> <li>Published the Temporal 102: Exploring Durable Execution Courses in Java and Python</li> </ul> </li> <li>Community:<ul> <li>Organized and delivered PyTexas 2023<ul> <li>Currently organizing PyTexas 2024</li> </ul> </li> <li>Organized and launched the PyTexas Monthly Meetup<ul> <li>And continuing with this into the new year</li> </ul> </li> <li>Presented at PyTexas December Meetup</li> <li>Delivered Temporal 101 and 102 in Java live at Temporal's Replay Conference</li> </ul> </li> </ul>","tags":["Blogging","Life"]},{"location":"blog/2023-is-dead-long-live-2024/#what-does-2024-hold","title":"What Does 2024 Hold?","text":"<p>I am aiming for 2024 to be a transformative year for me. It's mostly going to be a year for me. I need to improve my health, both mentally and physically. Time to make the most out of my 30s. </p> <p>Putting these out into the world. I will report back in next year's recap.</p> <ul> <li>No sodas<ul> <li>I made it halfway through the year and then backslid. I can't even allow myself sugar free sodas as they tempt me. And honestly, with how much the shit costs these days good riddance. </li> </ul> </li> <li>Lose 50 lbs<ul> <li>And this time I mean it! I started out 2023 on a good track and was even down 20 lbs at one point. I was going to the gym five days a week before work and really enjoyed swimming again. When I was 18 I had major reconstructive surgery on my right knee which limits my ability for high impact cardio, but I've always loved swimming. I'm also doing weight training and already am making good progress.</li> </ul> </li> <li>Eat Healthier and Avoid Fast Food<ul> <li>This alone will help with the issue above. There's going to be a lot more crock pot meals and meal prepping. Too often I choose convenience over health and that must change.</li> </ul> </li> <li>Finish my book<ul> <li>I have a contract with a publisher to deliver this. I have the first few chapters done and more on the way. I procrastinated in 2023, let's get this out the door quickly in 2024.</li> </ul> </li> <li>Build My First SaaS<ul> <li>I finally have an idea. My little brother and I are discussing it and I hope to have something ready to deliver by mid-year. That's all I'm going to say for now.</li> </ul> </li> <li>Read More Books. Like, a lot more<ul> <li>I have a metric fuck ton of books on my bookshelf that have gone unread. That changes this year. I long have had an idea of selecting 52 books and assigning them the value of a card from a standard deck of cards. My goal is to draw one card a week and read one book a week. Some are shorter than others. I'll probably slip some here, but I'm going to try. The goal is to finish more books this year. I'll report back in 2024 with the progress. If you want to follow along, check out this Google Sheet</li> </ul> </li> </ul> <p>It's a lot. But 2024 will be a transformational year for me. As I age my discipline seems to increase and I am feeling very confident that I can achieve these goals. Feel free to drop a line sometime and ask me how I'm doing to keep me honest. </p> <p>Happy New Year and here's to a great 2024, regardless of what the world throws our way.</p>","tags":["Blogging","Life"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/","title":"You Don't Get Better Without Deliberate Practice","text":"<p>I had a close friend who recently joined the tech industry reach out to me and ask me about my thoughts regarding doing \"outside work\" to level up his career. I see this discourse come up on Twitter(1) from time to time so I felt now's as good as ever to offer my thoughts.</p> <ol> <li>I refuse to call it X. Never gonna happen.</li> </ol>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#the-question","title":"The Question","text":"<p>Every six months or so I see some variation of the question appear on social media:(1)</p> <ol> <li>Usually being stirred up by \"tech influencers\" desperate for engagement, but that's none of my business...</li> </ol> <p>\"Should I be working outside of work hours to get better/get ahead in my career? </p> <p>These types of posts tend to attract many strong opinions and there are typically two schools of thought regarding it(1):</p> <ol> <li>But often in waaaaaay more words than this.</li> </ol> <p></p> <ul> <li>Yes, you should definitely be working outside of work hours</li> <li>No, you should never work outside of work hours</li> </ul> <p>The issue I take with these answers is the tend to overlook a few nuanced considerations, mainly around career aspirations and reality.</p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#through-the-eyes-of-a-musician-turned-programmer","title":"Through the Eyes of a Musician Turned Programmer","text":"<p>While in college, I studied both Music and Computer Science(1). I received both my Bachelor's of Arts in Music and Bachelor's of Science in Computer Science from  Texas State University at the same time. I walked across the stage on Friday to receive my Music diploma and again the following day to receive my Computer Science diploma. However, my education in these topics didn't start there. I had played  an instrument since I was 11 and had been programming since I was 15.</p> <ol> <li>Ok, so I'm going to keep this as short as I can. This story is deep.</li> </ol> <p>There is a theory known as the 10,000 Hour Rule that is often cited in music programs. The idea is that if you practice 10,000 hours, you will reach elite if not virtuosic status in whatever you are trying to achieve. It's a good story. Try hard enough, you'll get good. And while recent studies have debunked certain aspects of this theory, I still believe there is some truth in it. </p> <p>When I was an undergrad studying music my freshman year, my classmates would often brag about how much time they spent practicing. </p> <p>\"I spent 8 hours in the practice room today.\" </p> <p>\"Oh ya? Well I was in there for 10 straight hours!\"</p> <p>\"You wimps, I woke up, went to the practice room, and the next thing I knew it was tomorrow.\"</p> <p>However, when you asked them what they accomplished during this time, their answers would become a lot less clear. They may have been able to say they worked on their solo, or practiced their scales, but when asked \"What can you do today that you couldn't do yesterday?\" an answer was rarely found. This made me realize that practice alone was not the answer. Deliberate or focused practice was.</p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#deliberate-practice","title":"Deliberate Practice","text":"<p>Think of professions outside of your own. Perhaps a musician, a doctor, or a lawyer.  Do you think they work outside of work hours? Does a musician show up to play at  a concert and never practice the material before hand? Does a doctor with a full  patient load cease learning because it doesn't fit in the 9 to 5? How about a  lawyer who doesn't keep up with recent case law? There may be some who do this, but ask yourself, would you purchase the services of these individuals?</p> <p>Practice is key to improvement, there's no disputing that. However, the type of practice matters. Practicing your instrument just for the sake of practicing does not lead to improvement. Going in, setting a goal of being able to play these scales from memory at this tempo a certain number of times without failure does. How long this takes you is irrelevant. Whether it takes you 30 minutes or 30 hours, the result is the same.</p> <p>Deliberate, focused, goal-oriented practice is required to improve a skill. Period. End of sentence. Whether you are given time to do that while on the job is irrelevant. You may get lucky. You may be given time to sit down and learn about a new technology or tool to make your job easier. But capitalism is going to capitalism, and most likely you won't be given the time. Therefore, you have to make the time.</p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#should-you-practice-outside-of-work-hours","title":"Should You Practice Outside of Work Hours?","text":"<p>Many people try to answer this question without answering a more important one first, which is </p> <p>\"What do you want from your career?\"</p> <p>Are you trying to be the best software engineer on your team? Get promoted to Head Lead Senior Staff Vice Principal Architect Astronaut? Or are you providing your time as a service in return for compensation?</p> <p>Let me be 100000% clear BOTH ARE PERFECTLY VALID ANSWERS!</p> <p>One of the things I hate about corporate culture is the expectation that  we should always be striving to take the next step up the ladder.(1) I have great friends and colleagues that are like me, highly ambitious in our careers and are  constantly striving to do more and make vertical moves. And I have great friends  and colleagues who clock in at nine, leave at five, and don't write a line of code in the hours outside of that. Both are valid ways of living your life. You can have a successful career on both paths. </p> <ol> <li>This absolute stupidity is the reason the Peter Principle exists. And we do it to ourselves. Just let people do the job they want to do for fucks sake and stop pushing them into roles they aren't capable of doing and, more importantly, don't fucking want.</li> </ol> <p>So does this mean that those who are hyper obsessed with their career are more  likely to have a more successful outcome? Yes. But let's be honest, you already know that. You know this because you have observed reality around you. At the time of writing this, the 2024 Summer Olympics are happening, and I'm constantly seeing joke posts on the internet about how we should have one \"normal\" person participating in the events so we can see how the rest of us would fare. This is a perfect example of deliberate practice. </p> <p>Is it also possible for someone who doesn't engage in their career outside of work hours to just be better than you? Also yes. They may just have a natural affinity for network switches. There's nothing you can do about this. Being upset or jealous will get you no where. So focus on what you can control, which is yourself.</p> <p>As a past professor used to tell me</p> <p>\"You don't know their story.\" </p> <p>Which basically meant that you don't know what they did or how they acquired that knowledge.  Maybe they've been doing it from a young age. Maybe they spend hours everyday learning on their own time. Maybe they're 10,000 years old and have the wealth of all human knowledge in their head. No matter the reason, you cannot change what they know. The only person you can improve is yourself. Focus on the things within your ability to change and control. Instead of being jealous, learn from them. In my career I have progressed at every role I've been in because I identified the person in the room who was way better than me at a specific task, sat next  to them, and listened and learned.</p> <p></p> <p>So, the answer to the question \"Should I be working/practicing outside of work hours\" is, in my opinion, \"If doing so advances your career in the direction you want, then yes.\" But it isn't just that you practice, it's that you practice the right things.</p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#not-all-types-of-practice-yield-the-same-results","title":"Not All Types of Practice Yield the Same Results","text":"<p>The summer before my junior year in high school I had the opportunity to take a private lesson with a professional trombone player. Growing up in a rural area, opportunities like this were not common. My mom and I drove two hours to meet with the instructor and honestly, that one hour session changed the trajectory of how I played and practiced. We spent the entire time discussing embouchure(1) and getting mine right. The results were immediate and amazing. He gave me  a few exercises to practice and we were done. </p> <ol> <li>embouchure: noun the way in which a player applies the mouth to the mouthpiece of a brass or wind instrument</li> </ol> <p>It's not just enough to practice, it's determining what is lacking, how to fix it, and how to maintain these changes going forward. Having a good teacher or mentor who can point you in the right direction makes all the difference here. I had been practicing trombone for five years and gained more in an hour than five years of instruction had provided. Whether it's learning trombone or how to deploy Kubernetes clusters, if you're not getting the right information your progress will be limited. Don't get me wrong, you'll make progress. Anything is better than nothing. But you may not see the results you want. You may get stuck, or not progress as quickly as you would have hoped. This can lead to discouragement.</p> <p>So how do you ensure that you are practicing the right thing? Find a mentor. Find someone who has traveled a similar path you wish to go and ask them what they recommend you learn, how to learn it, and most importantly, what not to learn.</p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#where-should-i-start","title":"Where Should I Start?","text":"<p>Going forward, I'm going to assume that you have decided that you do wish to  do some form of outside work practice. Because if you decided not to, congrats, you're done! </p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#dont-just-do-more-work","title":"Don't Just 'Do More Work'","text":"<p>The first thing I always tell people is don't work for free. This phrase can have a variety of interpretations, but the most simplest is, don't just continue working on assignments from your employer. This is a trap a lot of people fall in to. </p> <p>For the sake of this example, let's pretend you decide to dedicate ten hours a week to deliberate practice, but decide to fill it by just doing more work for  your employer.</p> <p>First, your employer isn't going to reward you for it. They may say they will, but in reality they won't. Not fairly at least. I took this route at the  beginning of my career. I put in extra hours to help get a massively over-scoped project to ship on time. At performance review time I received a top review, one of only five engineers across the entire 2500 person company to receive one. My reward was 5% bonus. When I left that job a year later, my new role was a 36% increase in pay. The reality is promotions, bonuses, stock grants from your current employer never stack up to what you can get by getting a new job. </p> <p>Second, you're setting an unrealistic expectation of your output. You are sending a signal that this is your new capacity for work. Your employer is getting an  extra 10 hours a week for free that you may not want to give for the rest of your  time there. But if you ever decrease that time, you may be viewed as slacking. </p> <p>Third, you may not realize it, but you're raising the companies expectations on your teammates. Think about it. You've just increased your output by 20%, from 40 hours a week to 50 hours a week. Your team is now faced with two options, try to replicate what you are doing, or hope that no one higher up starts asking \"Well X can get Y number of things done in a week, why can't you?\". By putting in more hours, you are creating a more difficult environment for your teammates.</p> <p>Finally, the reward for good work is always more work. Something you pick up as part of your practice may end up becoming part of your job. Say for example that your company maintains a Terraform provider and you want to learn how to  build Terraform providers(1). So you decide to pick up a few issues from GitHub and fix them. Oh wait, there was a bug in that ticket. Do you have time to fix it? Hey, the company has this new feature and they want it put into the Terraform provider. You were the last one to touch is, so you can implement it right?  Shouldn't take too long and we all know you get work done. OMG there is a massive issue with the provider, it's deleting things it shouldn't! You need to fix this NOW! And it goes on and on and on. You are now responsible for something that isn't part of your job description and you aren't being measured on. But the  company still expects work to be done, so congratulations on your new responsibility. And even better, you may get requests for help on things adjacent to this. You have now become known as someone who gets things done in your organization. So everyone is going to come to you with their issues. And now you have to exercise your ability to say no to things(2). By the way, you're still expected to get your  original workload done. You won't be given any space to make time for all these new tasks, so now you really do need those extra ten hours a week. See how it can quickly spiral out of control? So be careful with what extra tasks you pick  up, they have a tendency to multiply.</p> <ol> <li>Great call btw! You clearly have immaculate tastes. Except for the Golang part. But woohoo for the Terraform part!</li> <li>Which most people suuuuuuuuck at.</li> </ol> <p>And don't come at me with this \"Well I want to get promoted\" shit. If you think that doing more work on your team is what leads to a promotion you have a misguided understanding of how promotions work, especially in tech. You don't get promoted by doing the same work you were already doing. You get promoted by doing different work, by working cross function and collaborating. The formula isn't</p> \\[ p=ht \\] <p>where \\(p\\) is getting a promotion, which is determined by the product of the number of hours you work \\(h\\) and the number of tasks \\(t\\) you finish(1).</p> <ol> <li>Oooooh. Pretty math plugin for markdown. Me likey.</li> </ol> <p>Bottom line, I highly recommend you don't dedicate your practice time to doing more work for your employer. It never ends equitably.</p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#work-for-yourself","title":"Work for Yourself","text":"<p>So how do you practice if you don't just do more work for your employer? Simple. Work for yourself. This doesn't mean that you have to turn your practice into a side hustle and make money(1). It means the primary benefactor of your work is you or something you care about, like an open-source project.</p> <ol> <li>Although this isn't uncommon. Many startups have found their roots here.</li> </ol>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#practice-with-leet-code-problems","title":"Practice with Leet Code Problems","text":"<p>While I have made my disdain for leet code known far and wide, I don't take issue with the exercises themselves, rather how they are used in the hiring process. They are actually not a bad place to start when picking up something to practice.  Just view them as code puzzles. When doing them, practice a certain skill. Are  you trying to get better and writing optimized code? Try to make the answer as  fast and using the least memory as possible. Are you trying to get more practice  with the Python standard library? Find a way to use functions from that in your ' solutions. Want to learn new language? Write your solutions in that language(1).</p> <ol> <li>This is actually what I do. When I was in high school I was on a competitive programming team and did leet style programs. When I learn a new language I actually pick up some of these old problems that I already know the answer to and implement them in the language that I am learning. </li> </ol> <p>I don't recommend staying in leet code forever. I occasionally do one for  a brain teaser, and I do try Advent of Code every year. They have a specific purpose, and are not a silver bullet(1).</p> <ol> <li>No matter how much tech hiring wants them to be.</li> </ol>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#work-on-a-side-project","title":"Work on a Side Project","text":"<p>This is one of the best ways to get exposure to new tools. Pick a tool/framework  that you want to learn and build something with it. Or even pick a tool that you use at work. It's totally fine to practice skills you currently use at your job at home, just build your own things with them. This allows you to play around with it, try new features, break things, and just have fun. </p>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#read-a-book","title":"Read a Book","text":"<p>Bet you weren't expecting that one were you? Books are a great source of knowledge, inspiration, and wisdom. Practice isn't solely hands on keyboard. Practice can take many forms. So read a book. You may retort with \"Well what about blog posts or Reddit or SubStack?\" and those are fine too, but there is something to be had for reading a book from a publisher. The publisher vetted that book and its contents. They paid for technical review, copy editing, developmental editing, and a lot more. They put their reputation on the line saying \"We stand by the contents of this book enough that we want to distribute it.\" So ya, I put a little more faith in books from established publishers. </p> <p>It should also be noted that you don't have to read about a new technology.  Books on leadership, time management, marketing(1), anything outside your direct area of work will help you understand the challenges of the business more. If you're looking to advance in your career, you can't just know about your job. The higher you climb, the more knowledge about the business as a whole is required.</p> <ol> <li> <p>The amount of engineers who scoff at marketing(1) is directly equivalent to the number of failed startups in the world. \"Build it and they will come\" is horseshit. </p> <ol> <li>That was me. I was one. I learned my lesson.</li> </ol> </li> </ol> <p>But I'll go even further. Don't like reading books about work or tech? Fine. Read some fiction. Just  read  for  the  love  of   God . Reading is so good for you. It's so good for your brain. Adults don't  read enough. Read.(1)</p> <ol> <li>And now I've convinced myself to write a blog post about this topic. So be ready.</li> </ol>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#join-a-community","title":"Join a Community","text":"<p>One of the fatal flaws I see people fall in to is not caring about their professional network. The tech industry is a small world. If you haven't experienced this phenomenon yet, give it a minute. You'll start a new job and your coworker may be the cousin of your ex-boss. If you don't think people go through your LinkedIn, check connections, and ask mutuals about you then I've got some ocean front property in Arizona I'd like to sell you(1).  So nurture your professional network. Go to a local meetup, conference, social event. Keep in touch with previous coworkers. If you're feeling really confident, give a presentation at an event. Communities are a great way to stay up to date on the latest trends in tech, as well as make connections who you one day may want to work with. And heck, you may just make  some friends along the way(2).</p> <ol> <li> <p>Growing up in the south, folksy sayings are my vernacular. Sometimes they come from ones I've actually heard, sometimes I make them up on the spot. Every. Single. Job. I've ever worked has always said they want a book of my phrases. Every one. This particular one comes to us from the wonderful lyrics of the King of Country Music, George Strait. If you don't get it, or aren't familiar with the geography of the United States, Arizona is landlocked. It means you're gullable. This was a particular favorite of my mothers.</p> </li> <li> <p>Some of my best friends I met at a conference. We get together every year and hang out, eat BBQ, and catch up. If I ever need professional advice, or hell even a job, I know I can reach out to them. </p> </li> </ol>","tags":["Blogging","Practicing"]},{"location":"blog/you-dont-get-better-without-deliberate-practice/#parting-thoughts","title":"Parting Thoughts","text":"<p>As I was leaving the private trombone lesson mentioned earlier, the lesson teacher had one more golden nugget to share, which I have carried with me my entire career.  He simply said to me</p> <p>\"You decide how great you're going to be. No one else.\"</p> <p>This quote still has a profound impact on me today. It's why I practice outside of my working hours. I have large aspirations for my career. I want to climb the ladder and see how far I can go. And all of the tools necessary for me to achieve this rests solely in my hands. I just have to choose to act. And so do you. </p> <p>What will you choose?</p>","tags":["Blogging","Practicing"]},{"location":"extras/","title":"Extras","text":"<p>Here's all the other things I do and like in no particular order</p>"},{"location":"extras/#links","title":"Links","text":"<p>Here is a list of articles, books, videos, and other resources that I've read that have helped me throughout my career. I'm constantly sharing these with people and  forgetting where the link is so I'm making this page to alleviate unnecessary  Googling and Slack Message searchs. </p> <p>If you find it useful too then that's alright too. lol </p>"},{"location":"extras/#articles","title":"Articles","text":"<ul> <li>Maker's Schedule, Manager's Schedule - Paul Graham</li> <li>Always be quitting - Julio Merino</li> <li>How to help a student get unstuck</li> </ul>"},{"location":"extras/#threads","title":"Threads","text":"<ul> <li>How Do Toxic Leaders Get So Far? - John Cutler</li> </ul>"},{"location":"extras/#books","title":"Books","text":"<ul> <li>Cash Flow for Creators: How to Transform Your Art Into a Career</li> </ul>"},{"location":"extras/#teaching","title":"Teaching","text":"<p>I've always had a passion for teaching. I feel this comes from being raised in an educational environment. My mother, grandmother and grandfather, and  great-grandfather were all teachers. My family lineage can be traced back the  pioneers of education in Texas. I like to think that education is in my blood.</p>"},{"location":"extras/#idea-montopolis","title":"IDEA Montopolis","text":"<p>2018-2019 School Year</p> <ul> <li>AP Computer Science A (Java)</li> </ul>"},{"location":"extras/#texas-state-university","title":"Texas State University","text":"<ul> <li>CS 1428 Honors Foundations of Computer Science I (C++) - Lab<ul> <li>Fall: 2013, 2014, 2015</li> </ul> </li> <li>CS 1428 Foundations of Computer Science I (C++) - Lab<ul> <li>Spring: 2014, 2015 </li> <li>Summer I: 2014</li> <li>Fall: 2013, 2014</li> </ul> </li> <li>CS 1308: Computer Literacy and the Internet - Lab<ul> <li>Spring: 2015</li> <li>Summer: I 2012, 2013, 2014, 2015</li> <li>Summer: II 2012, 2013, 2014</li> <li>Fall: 2012, 2014</li> </ul> </li> </ul>"},{"location":"speaking/","title":"Speaking","text":"<p>Public speaking is something I'm very passionate about. I love being able to share my experience, opinions, and knowledge with people. I love to travel so speaking at conferences is a good reason for me to travel.</p> <p>You can find my talks of all types (conferences, webinars, university talks) and corresponding resources below.</p>"},{"location":"speaking/building-docs-like-code-continuous-integration-for-documentation/","title":"Building Docs like Code: Continuous Integration for Documentation","text":"<p>This talk discusses why developers dislike writing documentation, what we can do to address this, and provides a ready to go pipeline for  automating your documtation</p> <p>Project documentation is easy to neglect. Keep your docs inside your source repo &amp; learn how to automatically build &amp; publish beautiful docs on every commit. Viewers will leave with a new mindset on how to handle documentation, tooling for this process, &amp; an easy-to-implement method to achieve this.</p> <p>This talk was given at:</p> <ul> <li>PyCon 2020</li> <li>PyGotham October 2019</li> <li>PyLatam August 2019</li> <li>PyOhio July 2019</li> <li>Texas Linux Fest July 2019</li> <li>PyTexas May 2019</li> </ul> <p>Presentation Slides</p> <p>Note, I typically tweak my slides a bit before each talk. These slides may not be the exact talk you saw, but they are pretty close.</p> <p>This talk has been officially retired. I may revist the concepts in a few years, but I think 5 presentations is enough for now.</p>"},{"location":"speaking/digitalocean-tech-talks/","title":"DigitalOcean Tech Talks","text":"<p>During my time at DigitalOcean I presented multiple Tech Talks live for the community. This is the comprehensive list of talks I gave</p> <ul> <li>Getting Started with Flask</li> <li>Foundations of Computer Security</li> <li>Building a Minimal, Production-Ready Infrastructure on DigitalOcean</li> <li>Securing Your Droplet</li> <li>Utilizing Security Features in SSH</li> <li>Keeping Your Sites and Users Safe Using SSL</li> <li>Top 10 Security Practices for Protecting Your Infrastructure</li> </ul>"},{"location":"speaking/write-docs-devs-love-ten-tricks-to-level-up-your-tech-writing/","title":"Write Docs Devs Love: Ten Tricks to Level Up Your Tech Writing","text":"<p>You're read good tutorials, you've read bad tutorials. In this talk I'll discuss 10 tips and tricks to level up your technical writing.</p> <p>Think of that feeling you get when you follow an online tutorial or documentation and the code works on the first run. Now think of all the hours spent wasted following broken, outdated, or incomplete documentation. From our favorite tutorials to bad product docs we all consume technical writing. Tutorials, blog posts, and product docs help developers learn new things, build projects, and debug issues. But what makes one tutorial better than another? In this talk I'll discuss how you can write the documentation that developers love and I\u2019ll share 10 tips and tricks to improve your technical writing.</p> <p>This talk was given at:</p> <ul> <li>PyCon US 2024 - Documentation Summit</li> <li>PyCon US 2022</li> <li>PyGotham 2021</li> </ul> <p>Presentation Slides </p>"},{"location":"speaking/pfsense---a-beginners-guide-to-a-sensible-firewall/","title":"pfSense - A Beginner's Guide to a Sensible Firewall","text":"<p>This talk was given at Texas Linux Fest 2016. Co-founder of pfSense Chris Buechler was present in the audience. No pressure.</p> <p>Tired of your home router's UI? Wish you could have more control over everything in your network? Looking to replace enterprise routers with something OpenSource and easy to use? This session is a dive into the vast world of pfSense and the features it provides. In a world where security is becoming more complex, we need a simple, sensible tool to help keep us secure.</p> <p>pfSense is an Open Source Firewall built on FreeBSD and their port of the OpenBSD pf (packet filter) firewall. With a quick setup and an extremely well designed web UI deploying industry firewalls has never been easier. I will go  over a little bit of the history/design of pfSense, discuss some of the key features, and demonstrate standing up a basic pfSense VM and routing other VM traffic through it. (It's so easy I can do it in about 5-8 minutes).</p> <p>Presentation Slides</p>"},{"location":"speaking/python-102-beyond-the-basics/","title":"Python 102: Beyond the Basics","text":"<p>In this Workshop, you will go beyond the basics of Python and explore various language features that make Python pythonic. </p> <p>One of the benefits to Python is the ability to be productive while knowing a  small subset of the features the language has to offer. While this is one of Python's super powers, many Python developers are missing out on the full experience by not diving deeper into the wonderful features Python has to offer. </p> <p>In this tutorial, you will go beyond the basics of Python and explore various language features that make Python pythonic. Specifically, you will learn about:</p> <ol> <li>Fist-class Functions</li> <li>Decorators</li> <li>Comprehensions</li> <li>Dunder Methods &amp; Operator Overloading</li> <li>Context Managers</li> </ol> <p>This will be a hands on tutorial. All exercises will be distributed as a GitHub repository and as Jupyter Notebooks in Google Colab. </p>"},{"location":"speaking/python-102-beyond-the-basics/#course-materials","title":"Course Materials","text":"<ul> <li>Google Colab Drive</li> <li>GitHub Repo</li> <li>Slides</li> </ul>"},{"location":"speaking/python-102-beyond-the-basics/#delivery","title":"Delivery","text":"<p>This Workshop was given at:</p> <ul> <li>PyTexas 2024</li> </ul>"},{"location":"speaking/a-year-without-pants-strategies-for-successful-remote-work/","title":"A Year Without Pants: Strategies for Successful Remote Work","text":"<p>Remote work can be challenging. In this talk I'll discuss different strategies for increasing your productivity and enjoyment of remote work.</p>"},{"location":"speaking/a-year-without-pants-strategies-for-successful-remote-work/#introduction","title":"Introduction","text":"<p>2020 was the year of forced remote work. People struggle with this change due to lack of guidance on how to manage this shift. Due to this, many people have developed a negative opinion of remote work. However, remote work can be liberating. So how can you make working remotely enjoyable?  From daily routines to simulated commutes I\u2019ll discuss strategies for making remote work comfortable, productive, and enjoyable.</p> <p>This talk was given at:</p> <ul> <li>Python Web Conference 2021</li> </ul> <p>Presentation Slides </p>"},{"location":"speaking/slis-slas-and-sldohs-learning-about-service-uptime-from-homer-simpsons/","title":"SLI's, SLA's and SL'D'OHS! Learning about Service Uptime from Homer Simpsons","text":"<p>Measuring service uptime can be a daunting task, but not for the  Simpsons! Viewers will leave with a clearer understanding of how to account for  services, how SLxs can define and guide what to monitor, and how to implement  reliability targets and error budgets; all told by fabled Springfield wisdom</p>"},{"location":"speaking/slis-slas-and-sldohs-learning-about-service-uptime-from-homer-simpsons/#introduction","title":"Introduction","text":"<p>Building services is important, but what happens after they are built and  running in production? How do we establish trust with our customers that our  service will actually be available? Who creates these definitions and how do we  measure them?</p> <p>Service Level Indicators (SLI), Agreements (SLA), and Objectives (SLO) are  central to an operations mindset and foundational tools for effective Site  Reliability Engineering. This talk will take you on a journey through  Springfield as we discuss exactly what SLIs, SLAs, and SLOs are, how to measure  them, what targets should be measured, how to define uptime, availability, and  acceptable error rates, and what happens when they are breached.</p> <p>This talk was given at:</p> <pre><code>* [Open Source Summit 2020](https://www.youtube.com/watch?v=pkiEs3ax5uQ)\n* [Chicago Python User Group Meetup](https://www.youtube.com/watch?v=mXKOv0wlrg8)\n</code></pre> <p>Presentation Slides </p>"},{"location":"speaking/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo/","title":"There's a Snake in the Birdhouse! Building a Python Culture at Vrbo","text":"<p>We all love Python, but not everyone is fortunate enough to use it at their day job. Come and listen as I detail the journey I took to establish  Python as an onroad option at my company. Viewers will leave having learned  from my experiences\u2014both successes and mistakes\u2014and with a solid plan for  implementing Python at their job.</p>"},{"location":"speaking/theres-a-snake-in-the-birdhouse-building-a-python-culture-at-vrbo/#introduction","title":"Introduction","text":"<p>It\u2019s no surprise why many of us are so enamored with Python. Its simplicity,  accessibility, and community make it a prime choice for many projects. However,  not all software engineering shops use Python, maybe even some of the jobs you  work at. Introducing Python to your company and building a Pythonic culture from  the ground up is no small task, but it can be done. Join me as I take you  through the journey of getting Python from zero to hero within my company. I\u2019ll  share the experience from start to finish, including what worked, what didn\u2019t,  what I would have done differently, and how I evangelized Python to bring it to  be a supported language within my company\u2019s ecosystem.</p> <p>This talk was given at:</p> <pre><code>* [PyTexas 2020](https://www.youtube.com/watch?v=MR85hLdc1wk)\n* PyBay 2020\n* [PyOhio 2020](https://www.youtube.com/watch?v=zTFRXHOOy3A)\n* [EuroPython 2020](https://www.youtube.com/watch?v=OOoGjznwhJU)\n</code></pre> <p>Presentation Slides </p>"},{"location":"speaking/devrel-show-episode-4---mason-egger-from-temporal/","title":"DevRel Show Episode 4 - Mason Egger from Temporal","text":"<p>I join my old colleague Fr\u00e9d\u00e9ric Harper on his new Podcast The DevRel Show to discuss various DevRel Topics</p>"},{"location":"speaking/devrel-show-episode-4---mason-egger-from-temporal/#delivery","title":"Delivery","text":"<p>This was recorded live 11/2/2023  </p>"},{"location":"speaking/i-cant-believe-its-not-real-data-an-intro-to-synthetic-data/","title":"I Can't Believe It's Not Real Data! An Intro to Synthetic Data","text":"<p>What is Synthetic Data? What can I use it for? Is it as good as real data? Find out the answers to those and more</p>"},{"location":"speaking/i-cant-believe-its-not-real-data-an-intro-to-synthetic-data/#introduction","title":"Introduction","text":"<p>Easy access to relevant, safe data is a major bottleneck for developers and data scientists. The data could be insufficient, biased, contain private information, etc. making it unusable. With synthetic data we can generate data that\u2019s statistically accurate, privacy-protected, and safe to share.</p> <p>This talk was given at:</p> <ul> <li>PyCon US 2022 - Lightning Talk</li> <li>PyRVA 6/8/2022 - Full Talk</li> <li>PyOhio - Thunder (15 min) Talk</li> <li>PyCon Latam 8/26/2022 - Full Talk</li> <li>DigitalOcean Deploy - Full Talk</li> </ul> <p>Slides </p>"},{"location":"speaking/temporal-replay-workshops/","title":"Temporal Replay Workshops","text":"<p>Every year Temporal holds an annual conference, Replay, and the education team holds all day Workshops teaching attendees how to use Temporal.</p> <p>Unfortunately Temporal neither records these Workshops nor keeps the old website around, so there is no record of these.  The links lead to the landing page of Temporal's LMS courses.</p> <ul> <li>2025 (Upcoming) - Temporal 102: Exploring Durable Execution and Crafting an Error Handling Strategy in Java</li> <li>2024 - Temporal 101: Introducing the Temporal Platform and Temporal 102: Exploring Durable Execution in Python</li> <li>2023 - Temporal 101: Introducing the Temporal Platform and Temporal 102: Exploring Durable Execution in Java</li> </ul>"},{"location":"tutorials/","title":"Tutorials","text":"<p>These are technical tutorials on various topics that interest me or problems I have solved. </p> <p>These tutorials are in a similar style to the tutorials you'd find at DigitalOcean, as that is where my primary  technical writing education occurred. </p> <p>I routinely update and test these tutorials, so pay attention to messaging at the top of each that details the last time the  tutorial was updated.</p> <p>If you find an error in a tutorial or want to request a tutorial, please open an issue in GitHub</p> <p>I hope these help you out! If they do and you want to give me a shoutout, feel free to tweet at me</p>"},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/","title":"How To Build a 7 Days To Die Server on Ubuntu","text":"<p>7 Days to Die has easily become one of my favorite video games. It is essentially a cross between Minecraft and Left 4 Dead and I find it absolutely thrilling. In this tutorial you'll setup a 7D2D server on Ubuntu.</p>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/#the-premise","title":"The Premise","text":"<p>7 Days to Die  is an open-world sandbox that combines a first person shooter with survival horror, tower defense and traditional RPG elements. The game takes place in a post-apocalyptic world overrun by zombies. Your goal is to gather resources, craft shelter, food, and weapons, and survive the notorious blood moons that happen every 7 days where massive hordes of zombies attack.</p>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/#prerequisites","title":"Prerequisites","text":"<p>To complete this turoial, you'll need:</p> <ul> <li>An Ubuntu 20.04 server with a non-root user setup. Use this tutorial for initial server setup, except name your user <code>days</code>. I personally use a DigitalOcean server to host my game. However, cloud hosting for your server can be expensive. You may be better off building the server locally with an old PC. Note: This server would do well to have at least 8GB of RAM and 4 CPUs. You may need more depending on your configuration and how many players you wish to support.</li> <li>A copy of 7 Days to Die. You can purchase the game on the Steam Store</li> </ul>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/#step-1-installing-the-game","title":"Step 1 - Installing the Game","text":"<p>First thing you'll need to do is gain access to your server. If it's a local machine you can simply login via the UI or if it's a server, you should ssh in. Login as your non-root user 7d2d and update the server to the latest version so you have the most recent packages.</p> <pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n</code></pre> <p>Next, you'll need to install some packages for running 7d2d. You'll need to install a text editor (<code>nano</code>, <code>vim</code>, <code>emacs</code>, etc.) to be able to modify configuration files as well as the program <code>screen</code> to create virtual terminal sessions for running your game server. You'll need to install <code>wget</code> to install the Steam bash line tool and <code>lib32gcc1</code> to run the SteamCMD. </p> Ubuntu 22.04 or newerUbuntu 20.04 or older <p>Install them with the following bash:</p> <pre><code>sudo apt install -y vim screen wget lib32gcc-s1\n</code></pre> <p>Install them with the following bash:</p> <pre><code>sudo apt install -y vim screen wget lib32gcc1\n</code></pre> <p>Once you have the packages installed, you'll need to install SteamCMD. Use <code>wget</code> to download the CLI tool:</p> <pre><code>wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz\n</code></pre> <p>Once you have downloaded the tool, extract the <code>tar</code> archive using the <code>tar</code> bash:</p> <pre><code>tar -xvf steamcmd_linux.tar.gz\n</code></pre> <p>Next, start a SteamCMD session. Once you're logged in you'll see the SteamCMD prompt <code>Steam&gt;</code>:</p> <p><pre><code>./steamcmd.sh\n</code></pre> Next, you'll need to set where to install the game files. Call this folder 7days and install it in the current directory. This step must be done before login</p> <pre><code>force_install_dir ./7days\n</code></pre> <p>7 Days to Die is a game that doesn't require you to login to your personal account to download the game. So you'll need to login as an anonymous user. </p> <pre><code>login anonymous\n</code></pre> <p>Now you're ready to install the game. Steam uses app ids to distinguish which game to download. You can view the whole list on the Steam Dedicated Servers List. The id for 7D2D is 294420 which we'll use to install the game.</p> Current Stable Version of the GameSpecific Previous Stable VersionLatest Experimental Version <p>To install the current stable version of the game, use the following command:</p> <pre><code>app_update 294420\n</code></pre> <p>To install a previous stable version of the game, use the following command:</p> <pre><code>app_update 294420 -beta alpha21.1\n</code></pre> <p>To install the current experimental beta, use the following command:</p> <pre><code>app_update 294420 -beta latest_experimental\n</code></pre> <p>The game will now download and unpack in the directory. Once this is done you can quit the SteamCMD.</p> <pre><code>quit\n</code></pre> <p>Finally, 7D2D runs on port 26900 by default. If you enabled UFW from the Ubuntu initial server setup then you'll need to open this port to allow traffic along with a range within 5 other ports for other communication. Running the following bash will properly configure your firewall.</p> <pre><code>sudo ufw allow 26900:26905/tcp &amp;&amp; sudo ufw allow 26900:26905/udp\n</code></pre> <p>Once you've done this, you're ready to configure and launch the server.</p>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/#step-2-configuring-and-running-the-game","title":"Step 2 - Configuring and Running the Game","text":"<p>Now that you have the game installed navigate within the 7days folder to location of the configuration file.</p> <pre><code>cd 7days\n</code></pre> <p>The server configuration file is named serverconfig.xml. There are many settings within this file that can be tweaked, and they are all well documented. Below is a chart of some of the more interesting settings you may wish to change. This is not a comprehensive list of all settings.</p> Property Description ServerName The name of your server ServerDescription The description to be shown in the server browser ServerPort Which port to run your server on. If you change this you'll need to update your firewall ServerVisibility 0 = Not Listed, 1 = Friends, 2 = Public ServerPassword Password to get into your server. Leave blank for no password EACEnabled Easy Anti Cheat support. You'll need to set this to false if you plan on using mods. GameWorld Which map you want to play on. There are a handful of PREGENs. Set to RWG if you want to randomly generate your own. This does take a long time and can exhaust server resources. WorldGenSeed A seed for randomly generating your own world WorldGenSize Size of the world. From 2048 - 16384 LootRespawnDays How often loot respawns MaxSpawnedZombies How many zombies can spawn. Has a significant performance impact MaxSpawnedAnimals How many animals can spawn. Has a significant performance impact <p>Once you have modified the file to your liking you will need to start a <code>screen</code> session. This will create a virtual terminal session that will persist even after you have disconnected your terminal from the server. </p> <p>To start a session type the <code>screen bash</code>:</p> <pre><code>screen\n</code></pre> <p>You'll be prompted with some license information. Press Enter if you agree and now you're in a screen session. </p> <p>Now you can start the server by running the following bash:</p> <pre><code>./startserver.sh -configfile=serverconfig.xml\n</code></pre> <p>It does take a few minutes for your server to start. Once you see the following output your server is ready to be connected to.</p> <pre><code>Using config file: serverconfig.xml\n[UnityMemory] Configuration Parameters - Can be set up in boot.config\n    \"memorysetup-bucket-allocator-granularity=16\"\n    \"memorysetup-bucket-allocator-bucket-count=8\"\n    \"memorysetup-bucket-allocator-block-size=4194304\"\n    \"memorysetup-bucket-allocator-block-count=1\"\n    \"memorysetup-main-allocator-block-size=16777216\"\n... # Continues from here\n</code></pre> <p>Once you're ready to disconnect from the virtual session you can use the bash CTRL + A + D. Now you'll be able to continue doing things on the server. Once you're ready to reconnect to the session use the bash:</p> <pre><code>screen -r\n</code></pre> <p>You can learn more about the various screen commands here</p> <p>Now that your server is running you can now connect from your client and play.</p>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/#step-3-connecting-to-your-server","title":"Step 3 - Connecting to Your Server","text":"<p>Go to Steam and launch your 7 Days to Die Game. You'll want to click on the Join Game menu option.</p> <p></p> <p>Once you do this click on the Connect To IP button in the bottom right hand portion of the screen and enter your IP address. If you setup a DNS name for your server that will also work here. If you setup a password you'll be prompted for it after you click connect.</p> <p></p> <p>The server will start downloading the configuration and when it's done you'll load into your server.</p> <p></p>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/how-to-build-a-7-days-to-die-server-on-ubuntu/#conclusion","title":"Conclusion","text":"<p>In this tutorial you setup a 7 Days to Die server and loaded into it. In the next tutorial we'll install the Darkness Falls mod and discuss how to configure and even modify the mod.</p> <p>If you want to run this server on DigitalOcean you can click here for a $200 free credit for 2 months with a new account.</p>","tags":["Server","Linux","Ubuntu"]},{"location":"tutorials/redirecting-web-traffic-using-flask/","title":"Redirecting Web Traffic Using Flask","text":"<p>In this tutorial we'll use Flask and DigitalOcean's App Platform to redirect traffic from one URL to another.</p>"},{"location":"tutorials/redirecting-web-traffic-using-flask/#the-issue","title":"The Issue","text":"<p>I came about trying to solve this problem because I wanted to create a permanent link to my Discord server so people could join. Discord currently allows this kind of link to be created but it's a shortened bitly type link that isn't easy to remember. I wanted to be able to tell people \"Hey, go to discord.mason.dev to join my server\" and they would be taken to this bitly type link, thus joining my server. </p>"},{"location":"tutorials/redirecting-web-traffic-using-flask/#possible-solutions","title":"Possible Solutions","text":"<p>A simple solution to this would be simply to just use Nginx and perform a 301 redirect. I initially thought about doing this but it posed a few issues. The first was I knew I was going to deploy this application to DigitalOcean's App Platform and I was feeling suuuuuper lazy and didn't want to write a Dockerfile. Let's be honest. This had nothing to do with App Platform. I was just being lazy. The second was I felt this was too simple. Everyone's done this a million times. I wanted to solve the problem in Python (I had delusions of adding more functionality to this app, silly Mason) so I was going to solve it in Python. </p>"},{"location":"tutorials/redirecting-web-traffic-using-flask/#the-code","title":"The Code","text":"<p>So I wrote a simple Flask app. Like, this app is only one function that's one line long. Flask has a <code>redirect</code> method so I'll just use that and for extra spiciness I'll get the URL to redirect to from the environment variables. Woohoo for dynamic code ;) </p> <p>So here's the code.</p> <pre><code>import os\nimport logging\nfrom flask import Flask,redirect\n\n\napp = Flask(__name__)\n\n@app.route('/')\ndef hello():\n    # Use the built in Flask redirect function to redirect the traffic\n    # Adding the 301 code is a nice to have feature that makes web browsers\n    # happy. \n    return redirect(os.environ.get(\"REDIRECT_TO\", \"https://mason.dev\"), \n                    code=301)\n\nif __name__ == '__main__':\n    # Bind to PORT if defined, otherwise default to 5000.\n    logger = logging.getLogger()\n\n    # Set the log level to DEBUG. This will increase \n    # verbosity of logging messages\n    logger.setLevel(logging.DEBUG)\n\n    # Add the StreamHandler as a logging handler\n    logger.addHandler(logging.StreamHandler())\n\n    app.run(host='0.0.0.0', port=8080)\n</code></pre> <p>As you can see, there's nothing special about this code. It redirects the <code>/</code> route to wherever I want to redirect it to. That's it. No frills. No fluff. I actually think the logging section was a bit much here but writing that part is almost like auto pilot for my brain at this point.</p>"},{"location":"tutorials/redirecting-web-traffic-using-flask/#deploying-to-app-platform","title":"Deploying to App Platform","text":"<p>So now that I have this let's deploy it to DigitalOcean's App Platform.</p> <p>The first thing I need to do is create a GitHub repo for it and upload it. If you haven't checked out repo.new I recommend it. Seems like the theme of this blog is laziness and this really helps. </p> <p>Next, connect your GitHub account to App Platform. You'll have to specify which repositories you want App Platform to have access to and I tend to do this on an individual basis. You can just let it at all of them if you wanted. </p> <p>So go ahead and select GitHub (or Gitlab if that's where your code is) </p> <p>Then select the repository you want to deploy from and a specific branch </p> <p>App Platform uses Build Packs to detect what the app is, so it detected this was a Python app. Go ahead and add your environment variable <code>REDIRCT_TO</code> here otherwise it'll just redirect to my personal site. </p> <p>Give your service a name. It's not terribly important but it helps keep things straight. </p> <p>Select your compute plan. This would be the same price I would pay for a $5 Droplet with a lot less of the hassle so I like it. Once done launch your app. </p> <p>It'll take a little bit for your app to build and deploy. Once it's done deploying for the first time you'll notice that you get a default URL that is the name of your app + a hash on the ondigitalocean.app domain. If this works for you, great! You're done. But, if you want to use your own personal domain you'll have to do one more step.</p> <p>Go to the Settings tab and scroll down to the Domains section. Here you'll click Edit to add a domain. </p> <p>Add your domain that you want to redirect to, and it'll show you instructions for either managing the DNS record on DigitalOcean or your own DNS. Currently mason.dev is on a separate DNS provider and as is the theme of this blog, I'm too lazy to move it. So, I'll need the Adding a CNAME instructions. </p> <p>Once you've done this just wait a few minutes while your SSL certificate is setup and DNS to propagate. You'll see your new domain take the place of your old one and you're done!</p>"},{"location":"tutorials/redirecting-web-traffic-using-flask/#the-point","title":"The Point","text":"<p>This was simple yet fun app to build and DigitalOcean's App Platform helped with that. While I knew how to do this via Nginx because I have past DevOps experience, I was feeling really lazy the day I wrote this. So I wrote it in Python because even though it may not be the best solution that someone could come up with, it is a solution that someone will come up with. People tend to reach to languages they are familiar with when they have a problem they are trying to solve. The fact that App Platform made deploying this solution as simple as writing the code was is truly amazing. I can't wait for you to enable my laziness more in the future.</p>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2020/","title":"2020","text":""},{"location":"blog/archive/2019/","title":"2019","text":""},{"location":"blog/category/career/","title":"Career","text":""},{"location":"blog/category/goals/","title":"Goals","text":""},{"location":"blog/category/recap/","title":"Recap","text":""},{"location":"blog/category/resumes/","title":"Resumes","text":""},{"location":"blog/category/rant/","title":"Rant","text":""},{"location":"blog/category/programming/","title":"Programming","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"tutorials/archive/2022/","title":"2022","text":""},{"location":"tutorials/archive/2021/","title":"2021","text":""},{"location":"tutorials/category/gaming/","title":"Gaming","text":""},{"location":"tutorials/category/python/","title":"Python","text":""},{"location":"tutorials/category/web/","title":"Web","text":""},{"location":"tutorials/category/microservices/","title":"Microservices","text":""},{"location":"speaking/archive/2024/","title":"2024","text":""},{"location":"speaking/archive/2023/","title":"2023","text":""},{"location":"speaking/archive/2022/","title":"2022","text":""},{"location":"speaking/archive/2021/","title":"2021","text":""},{"location":"speaking/archive/2020/","title":"2020","text":""},{"location":"speaking/archive/2016/","title":"2016","text":""},{"location":"speaking/category/workshop/","title":"Workshop","text":""},{"location":"speaking/category/podcast/","title":"Podcast","text":""},{"location":"speaking/category/conference-talk/","title":"Conference Talk","text":""},{"location":"speaking/category/webinar/","title":"Webinar","text":""},{"location":"speaking/page/2/","title":"Speaking","text":""},{"location":"tags/","title":"Tags","text":"<p>Following is a list of relevant tags:</p>"},{"location":"tags/#blogging","title":"Blogging","text":"<ul> <li>Oh Shit, I Haven't Blogged in a While</li> <li>2023 Is Dead! Long Live 2024!</li> <li>You Don't Get Better Without Deliberate Practice</li> </ul>"},{"location":"tags/#cfps","title":"CFPs","text":"<ul> <li>How I Write Conference Talk Proposals</li> </ul>"},{"location":"tags/#community","title":"Community","text":"<ul> <li>Exploring New Waters: A Year One DigitalOcean Recap</li> <li>Swimming with the Sharks: Year 2 DO</li> </ul>"},{"location":"tags/#conferences","title":"Conferences","text":"<ul> <li>How I Write Conference Talk Proposals</li> </ul>"},{"location":"tags/#developer-advocate","title":"Developer Advocate","text":"<ul> <li>Exploring New Waters: A Year One DigitalOcean Recap</li> <li>Swimming with the Sharks: Year 2 DO</li> </ul>"},{"location":"tags/#developer-relations","title":"Developer Relations","text":"<ul> <li>Exploring New Waters: A Year One DigitalOcean Recap</li> <li>Swimming with the Sharks: Year 2 DO</li> </ul>"},{"location":"tags/#digitalocean","title":"DigitalOcean","text":"<ul> <li>Exploring New Waters: A Year One DigitalOcean Recap</li> <li>Swimming with the Sharks: Year 2 DO</li> </ul>"},{"location":"tags/#django","title":"Django","text":"<ul> <li>Django or Flask: How Do I Choose Which To Use?</li> </ul>"},{"location":"tags/#flask","title":"Flask","text":"<ul> <li>Django or Flask: How Do I Choose Which To Use?</li> </ul>"},{"location":"tags/#hugo","title":"Hugo","text":"<ul> <li>New Website!</li> </ul>"},{"location":"tags/#interviews","title":"Interviews","text":"<ul> <li>Tech Industry Interviews are Bullshit. Let's Make Them Better</li> </ul>"},{"location":"tags/#life","title":"Life","text":"<ul> <li>Oh Shit, I Haven't Blogged in a While</li> <li>2023 Is Dead! Long Live 2024!</li> </ul>"},{"location":"tags/#linux","title":"Linux","text":"<ul> <li>Year of the Linux Desktop</li> <li>How To Build a 7 Days To Die Server on Ubuntu</li> </ul>"},{"location":"tags/#practicing","title":"Practicing","text":"<ul> <li>You Don't Get Better Without Deliberate Practice</li> </ul>"},{"location":"tags/#programming","title":"Programming","text":"<ul> <li>Year of the Linux Desktop</li> </ul>"},{"location":"tags/#python","title":"Python","text":"<ul> <li>Django or Flask: How Do I Choose Which To Use?</li> </ul>"},{"location":"tags/#self-care","title":"Self Care","text":"<ul> <li>My Personal Job Litmus Test</li> </ul>"},{"location":"tags/#server","title":"Server","text":"<ul> <li>How To Build a 7 Days To Die Server on Ubuntu</li> </ul>"},{"location":"tags/#speaking","title":"Speaking","text":"<ul> <li>How I Write Conference Talk Proposals</li> </ul>"},{"location":"tags/#ubuntu","title":"Ubuntu","text":"<ul> <li>How To Build a 7 Days To Die Server on Ubuntu</li> </ul>"},{"location":"tags/#vscode","title":"VSCode","text":"<ul> <li>Year of the Linux Desktop</li> </ul>"},{"location":"tags/#wsl","title":"WSL","text":"<ul> <li>Year of the Linux Desktop</li> </ul>"},{"location":"tags/#web-development","title":"Web Development","text":"<ul> <li>Django or Flask: How Do I Choose Which To Use?</li> </ul>"},{"location":"tags/#website","title":"Website","text":"<ul> <li>New Website!</li> </ul>"},{"location":"tags/#windows","title":"Windows","text":"<ul> <li>Year of the Linux Desktop</li> </ul>"},{"location":"tags/#worklife-balance","title":"Work/Life Balance","text":"<ul> <li>My Personal Job Litmus Test</li> </ul>"}]}